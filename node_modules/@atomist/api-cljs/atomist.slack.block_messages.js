var window=global;var $CLJS=require("./cljs_env");require("./goog.base.js");require("./cljs.core.js");require("./goog.string.string.js");require("./goog.string.stringformat.js");require("./com.rpl.specter.js");
var iS,jS,nS,sS,vS,wS,IS;iS="atomist.slack.block-messages";jS=new $CLJS.y(null,"must","must",1396579466,null);$CLJS.kS=new $CLJS.y(null,"action-path","action-path",556972266,null);$CLJS.lS=new $CLJS.Q(null,"fixed-arity","fixed-arity",1586445869);$CLJS.mS=new $CLJS.y(iS,"base-path","atomist.slack.block-messages/base-path",768262906,null);nS=new $CLJS.y($CLJS.RC,"must","com.rpl.specter/must",-588449247,null);$CLJS.oS=new $CLJS.Q(null,"max-fixed-arity","max-fixed-arity",-690205543);
$CLJS.pS=new $CLJS.Q(null,"method-params","method-params",-980792179);$CLJS.qS=new $CLJS.y(null,"xs","xs",-2004992428,null);$CLJS.rS=new $CLJS.y(null,"action-pred","action-pred",-618864924,null);sS=new $CLJS.Q(null,"elements","elements",657646735);$CLJS.tS=new $CLJS.Q(null,"top-fn","top-fn",-2056129173);$CLJS.uS=new $CLJS.y(iS,"js-action-pred","atomist.slack.block-messages/js-action-pred",1370486334,null);vS=new $CLJS.Q(null,"accessory","accessory",635495745);
wS=new $CLJS.y("specter","cond-path","specter/cond-path",36847565,null);$CLJS.xS=new $CLJS.Q("atomist","modal","atomist/modal",-1372442229);$CLJS.yS=new $CLJS.Q(null,"action_id","action_id",-1034625939);$CLJS.zS=new $CLJS.y(iS,"action-pred","atomist.slack.block-messages/action-pred",-2003598201,null);$CLJS.AS=new $CLJS.Q(null,"arglists-meta","arglists-meta",1944829838);$CLJS.BS=new $CLJS.y(null,"p1__38184#","p1__38184#",-1525712281,null);
$CLJS.CS=new $CLJS.y(null,"js-action-pred","js-action-pred",-2026864609,null);$CLJS.DS=new $CLJS.Q("atomist","action","atomist/action",-131880239);$CLJS.ES=new $CLJS.Q(null,"atomist_modal","atomist_modal",431328712);$CLJS.FS=new $CLJS.y(iS,"action-path","atomist.slack.block-messages/action-path",1471312585,null);$CLJS.GS=new $CLJS.y(null,"p1__38185#","p1__38185#",1621489859,null);$CLJS.HS=new $CLJS.y($CLJS.Ea,"conj","cljs.core/conj",-460750931,null);
IS=new $CLJS.y("specter","must","specter/must",-655036148,null);$CLJS.JS=new $CLJS.y("specter","pred","specter/pred",1259552358,null);$CLJS.KS=new $CLJS.Q(null,"atomist_action","atomist_action",-1087624804);$CLJS.LS=new $CLJS.y(null,"base-path","base-path",2136291547,null);$CLJS.MS=new $CLJS.y(null,"\x3d","\x3d",-1501502141,null);$CLJS.NS=new $CLJS.Q(null,"variadic?","variadic?",584179762);$CLJS.OS=new $CLJS.y(null,"conj","conj",-1127293942,null);$CLJS.PS=new $CLJS.y(null,iS,iS,-648025505,null);var QS,RS=$CLJS.ED(),$S,aT,bT,cT,dT,eT,fT;
$CLJS.jD(RS,function(){var a=QS,b=null==a?function(){var c=$CLJS.NE(new $CLJS.T(null,1,5,$CLJS.U,[$CLJS.DE($CLJS.HE($CLJS.VG,new $CLJS.zc(function(){return $CLJS.VG},$CLJS.jG,$CLJS.Tm([$CLJS.Ui,$CLJS.Ri,$CLJS.Un,$CLJS.nn,$CLJS.Kn,$CLJS.ln,$CLJS.Nn,$CLJS.Wn,$CLJS.Dn,$CLJS.Xn],[$CLJS.uG,$CLJS.hG,"com/rpl/specter.cljc",25,1,1394,1394,$CLJS.Ec,"Takes in alternating cond-path path cond-path path...\n   Tests the structure if selecting with cond-path returns anything.\n   If so, it uses the following path for this portion of the navigation.\n   Otherwise, it tries the next cond-path. If nothing matches, then the structure\n   is not selected.",$CLJS.r($CLJS.VG)?
$CLJS.VG.eb:null])),wS),new $CLJS.T(null,4,5,$CLJS.U,[$CLJS.DE($CLJS.HE($CLJS.MG,new $CLJS.zc(function(){return $CLJS.MG},nS,$CLJS.Tm([$CLJS.Ui,$CLJS.Ri,$CLJS.Un,$CLJS.nn,$CLJS.Kn,$CLJS.ln,$CLJS.Nn,$CLJS.Wn,$CLJS.Dn,$CLJS.Xn],[$CLJS.uG,jS,"com/rpl/specter.cljc",7,1,957,960,$CLJS.Ec,"Navigate to the specified keys one after another, only if they exist\n             in the data structure. If navigate to NONE, that element is removed\n             from the map or vector.",$CLJS.r($CLJS.MG)?$CLJS.MG.eb:
null])),IS),new $CLJS.T(null,1,5,$CLJS.U,[$CLJS.DS],null),$CLJS.Y(IS,$CLJS.DS)),new $CLJS.T(null,1,5,$CLJS.U,[$CLJS.DS],null),$CLJS.DE($CLJS.HE($CLJS.MG,new $CLJS.zc(function(){return $CLJS.MG},nS,$CLJS.Tm([$CLJS.Ui,$CLJS.Ri,$CLJS.Un,$CLJS.nn,$CLJS.Kn,$CLJS.ln,$CLJS.Nn,$CLJS.Wn,$CLJS.Dn,$CLJS.Xn],[$CLJS.uG,jS,"com/rpl/specter.cljc",7,1,957,960,$CLJS.Ec,"Navigate to the specified keys one after another, only if they exist\n             in the data structure. If navigate to NONE, that element is removed\n             from the map or vector.",
$CLJS.r($CLJS.MG)?$CLJS.MG.eb:null])),IS),new $CLJS.T(null,1,5,$CLJS.U,[$CLJS.xS],null),$CLJS.Y(IS,$CLJS.xS)),new $CLJS.T(null,1,5,$CLJS.U,[$CLJS.xS],null)],null),$CLJS.Y(wS,$CLJS.Y(IS,$CLJS.DS),new $CLJS.T(null,1,5,$CLJS.U,[$CLJS.DS],null),$CLJS.Y(IS,$CLJS.xS),new $CLJS.T(null,1,5,$CLJS.U,[$CLJS.xS],null)))],null),new $CLJS.T(null,5,5,$CLJS.U,[wS,IS,new $CLJS.T(null,1,5,$CLJS.U,[$CLJS.DS],null),IS,new $CLJS.T(null,1,5,$CLJS.U,[$CLJS.xS],null)],null));return QS=c}():a;a=b.Ab;return $CLJS.r(b.yb)?
(b=new $CLJS.T(null,5,5,$CLJS.U,[$CLJS.VG,$CLJS.MG,new $CLJS.T(null,1,5,$CLJS.U,[$CLJS.DS],null),$CLJS.MG,new $CLJS.T(null,1,5,$CLJS.U,[$CLJS.xS],null)],null),a.h?a.h(b):a.call(null,b)):a}());
var SS=$CLJS.U,TS=function(){function a(b){b=$CLJS.on.h(b);var c=new $CLJS.lh(null,new $CLJS.q(null,2,["section",null,"actions",null],null),null);return c.h?c.h(b):c.call(null,b)}return $CLJS.qD.h?$CLJS.qD.h(a):$CLJS.qD.call(null,a)}(),US,VS=$CLJS.MG.h?$CLJS.MG.h(vS):$CLJS.MG.call(null,vS),WS=new $CLJS.T(null,1,5,$CLJS.U,[vS],null),XS=$CLJS.MG.h?$CLJS.MG.h(sS):$CLJS.MG.call(null,sS),YS=new $CLJS.T(null,2,5,$CLJS.U,[sS,$CLJS.IG],null);
US=$CLJS.VG.ea?$CLJS.VG.ea(VS,WS,XS,YS):$CLJS.VG.call(null,VS,WS,XS,YS);$CLJS.ZS=new $CLJS.T(null,3,5,SS,[$CLJS.IG,TS,US],null);$S=$CLJS.U;aT=function(){function a(b){b=$CLJS.on.h(b);var c=new $CLJS.lh(null,new $CLJS.q(null,2,["section",null,"actions",null],null),null);return c.h?c.h(b):c.call(null,b)}return $CLJS.qD.h?$CLJS.qD.h(a):$CLJS.qD.call(null,a)}();cT=$CLJS.MG.h?$CLJS.MG.h(vS):$CLJS.MG.call(null,vS);dT=new $CLJS.T(null,2,5,$CLJS.U,[vS,RS],null);
eT=$CLJS.MG.h?$CLJS.MG.h(sS):$CLJS.MG.call(null,sS);fT=new $CLJS.T(null,3,5,$CLJS.U,[sS,$CLJS.IG,RS],null);bT=$CLJS.VG.ea?$CLJS.VG.ea(cT,dT,eT,fT):$CLJS.VG.call(null,cT,dT,eT,fT);$CLJS.gT=new $CLJS.T(null,3,5,$S,[$CLJS.IG,aT,bT],null);