"use strict";
/*
 * Copyright Â© 2021 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.runSkill = void 0;
const fs = require("fs-extra");
const function_1 = require("../function");
const payload_1 = require("../payload");
async function runSkill(skill) {
    const payload = await fs.readJson(process.env.ATOMIST_PAYLOAD || "/atm/payload.json");
    const ctx = { eventId: process.env.ATOMIST_EVENT_ID };
    if (payload_1.isEventIncoming(payload)) {
        if (skill) {
            payload.extensions.operationName = skill;
        }
        await function_1.processEvent(payload, ctx);
    }
    else if (payload_1.isSubscriptionIncoming(payload)) {
        if (skill) {
            payload.subscription.name = skill;
        }
        await function_1.processEvent(payload, ctx);
    }
    else if (payload_1.isCommandIncoming(payload)) {
        if (skill) {
            payload.command = skill;
        }
        await function_1.processCommand(payload, ctx);
    }
    else if (payload_1.isWebhookIncoming(payload)) {
        await function_1.processWebhook(payload, ctx);
    }
}
exports.runSkill = runSkill;
//# sourceMappingURL=skill_run.js.map