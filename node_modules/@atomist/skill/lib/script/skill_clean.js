"use strict";
/*
 * Copyright Â© 2020 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.cleanSkill = void 0;
const fs = require("fs-extra");
const path = require("path");
const log_1 = require("../log");
/**
 * Clean a skill project that was previously processed by generate, bundle or package commands
 */
async function cleanSkill(cwd) {
    // Restore package.json and package_lock.json
    log_1.info("Restoring 'package.json' and 'package-lock.json'");
    await safeCopy(cwd, path.join(".atomist", "package.json"), "package.json");
    await safeCopy(cwd, path.join(".atomist", "package-lock.json"), "package-lock.json");
    // Delete .atomist and bundle folders
    log_1.info("Cleaning '.atomist' and 'bundle' folders");
    await safeDelete(cwd, ".atomist");
    await safeDelete(cwd, "bundle");
}
exports.cleanSkill = cleanSkill;
async function safeDelete(cwd, p) {
    if (await fs.pathExists(path.join(cwd, p))) {
        await fs.remove(path.join(cwd, p));
    }
}
async function safeCopy(cwd, from, to) {
    if (await fs.pathExists(path.join(cwd, from))) {
        await fs.copyFile(path.join(cwd, from), path.join(cwd, to));
    }
}
//# sourceMappingURL=skill_clean.js.map