"use strict";
/*
 * Copyright Â© 2020 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.cwd = exports.withGlobMatches = exports.globFiles = void 0;
/**
 * Utility to find files in a project via provided glob patterns
 */
async function globFiles(projectOrCwd, patterns, options = {}) {
    return (await Promise.resolve().then(() => require("fast-glob")))(patterns, Object.assign({ cwd: cwd(projectOrCwd), onlyFiles: true, dot: true, ignore: [".git", "node_modules"] }, options));
}
exports.globFiles = globFiles;
/**
 * Utility to run a callback with any matched file
 */
async function withGlobMatches(projectOrCwd, patterns, cb, options = {}) {
    const files = await globFiles(projectOrCwd, patterns, options);
    const results = [];
    for (const file of files) {
        const result = await cb(file);
        if (result) {
            results.push(result);
        }
    }
    return results;
}
exports.withGlobMatches = withGlobMatches;
function cwd(projectOrCwd) {
    return typeof projectOrCwd === "string"
        ? projectOrCwd
        : projectOrCwd.path();
}
exports.cwd = cwd;
//# sourceMappingURL=util.js.map