import { RestEndpointMethodTypes } from "@octokit/plugin-rest-endpoint-methods/dist-types/generated/parameters-and-response-types";
import { Contextual } from "../handler/handler";
import { AuthenticatedRepositoryId } from "../repository/id";
import { GitHubAppCredential, GitHubCredential } from "../secret/provider";
export interface CreateCheck {
    sha: string;
    name: string;
    title: string;
    body: string;
    details?: string;
    startedAt?: string;
    reuse?: boolean;
}
export interface UpdateCheck {
    conclusion?: "success" | "failure" | "neutral" | "cancelled" | "skipped" | "timed_out" | "action_required";
    body?: string;
    details?: string;
    annotations?: Annotation[];
    actions?: Array<{
        label: string;
        description: string;
        identifier: string;
    }>;
}
export interface Annotation {
    path: string;
    startLine: number;
    endLine: number;
    startColumn?: number;
    endColumn?: number;
    annotationLevel: "notice" | "warning" | "failure";
    message: string;
    title?: string;
}
export interface Check {
    data: RestEndpointMethodTypes["checks"]["create"]["response"]["data"] | RestEndpointMethodTypes["checks"]["update"]["response"]["data"];
    update: (parameters: UpdateCheck) => Promise<void>;
}
export declare function createCheck(ctx: Contextual<any, any>, id: AuthenticatedRepositoryId<GitHubCredential | GitHubAppCredential>, parameters: CreateCheck): Promise<Check>;
/**
 * Truncate the text to the desired number of bytes. Characters are
 * removed from the middle of the text and replaced with an ellipsis.
 */
export declare function truncateText(text: string, length?: number): string;
//# sourceMappingURL=check.d.ts.map