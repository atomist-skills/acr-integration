"use strict";
/*
 * Copyright Â© 2021 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.namedDatalog = exports.namedGraphQl = void 0;
const fs = require("fs-extra");
const path = require("path");
const util_1 = require("./util");
function namedGraphQl(name) {
    const segments = name.split("/");
    let module;
    let file;
    if (segments[0].startsWith("@")) {
        module = segments.slice(0, 2).join("/");
        file = segments.slice(2).join("/");
    }
    else {
        module = segments[0];
        file = segments.slice(1).join("/");
    }
    const root = __dirname.includes("node_modules")
        ? path.join(__dirname.split("node_modules")[0], "node_modules", module)
        : process.cwd();
    const filePath = path.join(root, "graphql", "subscription", `${file}.graphql`);
    // eslint-disable-next-line @typescript-eslint/no-var-requires
    const prettier = require("prettier");
    return prettier.format(util_1.inlineFragments(fs.readFileSync(filePath).toString(), path.join(root, "graphql")), { parser: "graphql" });
}
exports.namedGraphQl = namedGraphQl;
function namedDatalog(name) {
    const segments = name.split("/");
    let module;
    let file;
    if (segments[0].startsWith("@")) {
        module = segments.slice(0, 2).join("/");
        file = segments.slice(2).join("/");
    }
    else {
        module = segments[0];
        file = segments.slice(1).join("/");
    }
    const root = __dirname.includes("node_modules")
        ? path.join(__dirname.split("node_modules")[0], "node_modules", module)
        : process.cwd();
    const filePath = path.join(root, "datalog", "subscription", `${file}.edn`);
    return fs.readFileSync(filePath).toString();
}
exports.namedDatalog = namedDatalog;
//# sourceMappingURL=named.js.map