"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyCompliaceState = exports.PipelineStatus = exports.PipelineProvider = exports.OwnerType = exports.OrgInitializationState = exports.MergeStatus = exports.ManageTargetPolicyAction = exports.ManageSubscriptionPolicyAction = exports.LifecycleAttachmentType = exports.JobStatus = exports.IssueState = exports.EventType = exports.DockerRegistryType = exports.CredentialType = exports.CommitIssueRelationshipType = exports.CommentCommentType = exports.CheckSuiteStatus = exports.CheckSuiteConclusion = exports.CheckSuiteAction = exports.CheckRunStatus = exports.CheckRunConclusion = exports.CheckRunAction = exports.ChatTeamState = exports.BuildTrigger = exports.BuildStatus = exports.BucketUnit = exports.BinaryRepositoryType = exports.AtomistSkillUpgradePolicy = exports.AtomistSkillTechnology = exports.AtomistSkillStringParameterLineStyle = exports.AtomistSkillStatusCode = exports.AtomistSkillRuntime = exports.AtomistSkillRequiredCapabilityScope = exports.AtomistSkillParameterVisiblity = exports.AtomistSkillMaturityLevel = exports.AtomistSkillExecutionVisibility = exports.AtomistSkillExecutionTriggerEventType = exports.AtomistSkillExecutionState = exports.AtomistSkillExecutionSortOrder = exports.AtomistSkillExecutionSortField = exports.AtomistSkillExecutionPlatform = exports.AtomistSkillExecutionLogSeverity = exports.AtomistSkillExecutionLogCategory = exports.AtomistSkillEventDispatchStyle = exports.AtomistSkillCategoryKey = exports.AtmJobTaskState = exports.AtmJobState = exports.AtmInitialJobState = exports.AspectRegistrationState = exports.ApplyPolicyState = void 0;
exports._ResourceProviderOrdering = exports._RepoOrdering = exports._ReleaseOrdering = exports._PushOrdering = exports._PushImpactOrdering = exports._PullRequestOrdering = exports._PullRequestImpactOrdering = exports._PersonOrdering = exports._OrgOrdering = exports._Ordering = exports._LabelOrdering = exports._K8PodOrdering = exports._K8ContainerOrdering = exports._IssueOrdering = exports._ImageLinkedOrdering = exports._HerokuAppOrdering = exports._GitHubProviderOrdering = exports._GitHubIdOrdering = exports._GitHubAppResourceUserOrdering = exports._GitHubAppInstallationOrdering = exports._EmailOrdering = exports._DockerImageOrdering = exports._DeletedBranchOrdering = exports._CommitOrdering = exports._CommentOrdering = exports._CheckSuiteOrdering = exports._CheckRunOrdering = exports._ChatTeamOrdering = exports._ChatIdOrdering = exports._ChatChannelOrdering = exports._ChannelLinkOrdering = exports._BuildOrdering = exports._BranchOrdering = exports._AtomistLogOrdering = exports._ApplicationOrdering = exports.WebhookState = exports.WebhookAuthType = exports.TimeUnit = exports.StatusState = exports.SdmGoalState = exports.SdmGoalDisplayState = exports.SdmGoalDisplayFormat = exports.SdmDeployState = exports.ScmProviderStateName = exports.ReviewState = exports.ResourceUserType = exports.ResourceProviderStateName = exports.ReleaseAction = exports.PullRequestAction = exports.ProviderType = void 0;
exports._WorkflowOrdering = exports._UserJoinedChannelOrdering = exports._TeamOrdering = exports._TagOrdering = exports._StatusOrdering = exports._ScmProviderOrdering = exports._ScmIdOrdering = exports._ReviewOrdering = void 0;
var ApplyPolicyState;
(function (ApplyPolicyState) {
    ApplyPolicyState["Success"] = "success";
    ApplyPolicyState["NoChange"] = "no_change";
    ApplyPolicyState["Failure"] = "failure";
})(ApplyPolicyState = exports.ApplyPolicyState || (exports.ApplyPolicyState = {}));
var AspectRegistrationState;
(function (AspectRegistrationState) {
    AspectRegistrationState["Disabled"] = "Disabled";
    AspectRegistrationState["Enabled"] = "Enabled";
})(AspectRegistrationState = exports.AspectRegistrationState || (exports.AspectRegistrationState = {}));
/** The initial state of an AtmJob */
var AtmInitialJobState;
(function (AtmInitialJobState) {
    AtmInitialJobState["Preparing"] = "preparing";
    AtmInitialJobState["Running"] = "running";
})(AtmInitialJobState = exports.AtmInitialJobState || (exports.AtmInitialJobState = {}));
/** The state of an AtmJob */
var AtmJobState;
(function (AtmJobState) {
    AtmJobState["Preparing"] = "preparing";
    AtmJobState["Running"] = "running";
    AtmJobState["Completed"] = "completed";
    AtmJobState["Timedout"] = "timedout";
})(AtmJobState = exports.AtmJobState || (exports.AtmJobState = {}));
/** The state of a AtmJobTask */
var AtmJobTaskState;
(function (AtmJobTaskState) {
    AtmJobTaskState["Created"] = "created";
    AtmJobTaskState["Running"] = "running";
    AtmJobTaskState["Failed"] = "failed";
    AtmJobTaskState["Success"] = "success";
})(AtmJobTaskState = exports.AtmJobTaskState || (exports.AtmJobTaskState = {}));
var AtomistSkillCategoryKey;
(function (AtomistSkillCategoryKey) {
    AtomistSkillCategoryKey["Build"] = "BUILD";
    AtomistSkillCategoryKey["Chat"] = "CHAT";
    AtomistSkillCategoryKey["CodeMaintenance"] = "CODE_MAINTENANCE";
    AtomistSkillCategoryKey["CodeQuality"] = "CODE_QUALITY";
    AtomistSkillCategoryKey["CodeReview"] = "CODE_REVIEW";
    AtomistSkillCategoryKey["Dependencies"] = "DEPENDENCIES";
    AtomistSkillCategoryKey["Deploy"] = "DEPLOY";
    AtomistSkillCategoryKey["Devex"] = "DEVEX";
    AtomistSkillCategoryKey["Devops"] = "DEVOPS";
    AtomistSkillCategoryKey["Issues"] = "ISSUES";
    AtomistSkillCategoryKey["Monitor"] = "MONITOR";
    AtomistSkillCategoryKey["Notifications"] = "NOTIFICATIONS";
    AtomistSkillCategoryKey["ProjectManagement"] = "PROJECT_MANAGEMENT";
    AtomistSkillCategoryKey["RepoManagement"] = "REPO_MANAGEMENT";
    AtomistSkillCategoryKey["Security"] = "SECURITY";
})(AtomistSkillCategoryKey = exports.AtomistSkillCategoryKey || (exports.AtomistSkillCategoryKey = {}));
var AtomistSkillEventDispatchStyle;
(function (AtomistSkillEventDispatchStyle) {
    AtomistSkillEventDispatchStyle["Single"] = "single";
    AtomistSkillEventDispatchStyle["Multiple"] = "multiple";
})(AtomistSkillEventDispatchStyle = exports.AtomistSkillEventDispatchStyle || (exports.AtomistSkillEventDispatchStyle = {}));
var AtomistSkillExecutionLogCategory;
(function (AtomistSkillExecutionLogCategory) {
    AtomistSkillExecutionLogCategory["Developer"] = "developer";
    AtomistSkillExecutionLogCategory["User"] = "user";
})(AtomistSkillExecutionLogCategory = exports.AtomistSkillExecutionLogCategory || (exports.AtomistSkillExecutionLogCategory = {}));
var AtomistSkillExecutionLogSeverity;
(function (AtomistSkillExecutionLogSeverity) {
    AtomistSkillExecutionLogSeverity["Error"] = "error";
    AtomistSkillExecutionLogSeverity["Warn"] = "warn";
    AtomistSkillExecutionLogSeverity["Info"] = "info";
    AtomistSkillExecutionLogSeverity["Debug"] = "debug";
    AtomistSkillExecutionLogSeverity["Trace"] = "trace";
})(AtomistSkillExecutionLogSeverity = exports.AtomistSkillExecutionLogSeverity || (exports.AtomistSkillExecutionLogSeverity = {}));
var AtomistSkillExecutionPlatform;
(function (AtomistSkillExecutionPlatform) {
    AtomistSkillExecutionPlatform["Gcf"] = "gcf";
    AtomistSkillExecutionPlatform["Docker"] = "docker";
})(AtomistSkillExecutionPlatform = exports.AtomistSkillExecutionPlatform || (exports.AtomistSkillExecutionPlatform = {}));
var AtomistSkillExecutionSortField;
(function (AtomistSkillExecutionSortField) {
    AtomistSkillExecutionSortField["StartTime"] = "start_time";
    AtomistSkillExecutionSortField["EndTime"] = "end_time";
})(AtomistSkillExecutionSortField = exports.AtomistSkillExecutionSortField || (exports.AtomistSkillExecutionSortField = {}));
var AtomistSkillExecutionSortOrder;
(function (AtomistSkillExecutionSortOrder) {
    AtomistSkillExecutionSortOrder["Asc"] = "asc";
    AtomistSkillExecutionSortOrder["Desc"] = "desc";
})(AtomistSkillExecutionSortOrder = exports.AtomistSkillExecutionSortOrder || (exports.AtomistSkillExecutionSortOrder = {}));
var AtomistSkillExecutionState;
(function (AtomistSkillExecutionState) {
    AtomistSkillExecutionState["Queued"] = "queued";
    AtomistSkillExecutionState["Running"] = "running";
    AtomistSkillExecutionState["Completed"] = "completed";
    AtomistSkillExecutionState["Success"] = "success";
    AtomistSkillExecutionState["Failed"] = "failed";
    AtomistSkillExecutionState["Timeout"] = "timeout";
    AtomistSkillExecutionState["Crash"] = "crash";
    AtomistSkillExecutionState["Unknown"] = "unknown";
})(AtomistSkillExecutionState = exports.AtomistSkillExecutionState || (exports.AtomistSkillExecutionState = {}));
var AtomistSkillExecutionTriggerEventType;
(function (AtomistSkillExecutionTriggerEventType) {
    AtomistSkillExecutionTriggerEventType["Command"] = "command";
    AtomistSkillExecutionTriggerEventType["Subscription"] = "subscription";
    AtomistSkillExecutionTriggerEventType["Webhook"] = "webhook";
})(AtomistSkillExecutionTriggerEventType = exports.AtomistSkillExecutionTriggerEventType || (exports.AtomistSkillExecutionTriggerEventType = {}));
var AtomistSkillExecutionVisibility;
(function (AtomistSkillExecutionVisibility) {
    AtomistSkillExecutionVisibility["Visible"] = "visible";
    AtomistSkillExecutionVisibility["Hidden"] = "hidden";
})(AtomistSkillExecutionVisibility = exports.AtomistSkillExecutionVisibility || (exports.AtomistSkillExecutionVisibility = {}));
var AtomistSkillMaturityLevel;
(function (AtomistSkillMaturityLevel) {
    /** Release quality */
    AtomistSkillMaturityLevel["Stable"] = "stable";
    /** Candidate for next release, but might still have issues */
    AtomistSkillMaturityLevel["Testing"] = "testing";
    /** CI build - expect bugs */
    AtomistSkillMaturityLevel["Unstable"] = "unstable";
})(AtomistSkillMaturityLevel = exports.AtomistSkillMaturityLevel || (exports.AtomistSkillMaturityLevel = {}));
var AtomistSkillParameterVisiblity;
(function (AtomistSkillParameterVisiblity) {
    AtomistSkillParameterVisiblity["Hidden"] = "hidden";
    AtomistSkillParameterVisiblity["Advanced"] = "advanced";
    AtomistSkillParameterVisiblity["Normal"] = "normal";
})(AtomistSkillParameterVisiblity = exports.AtomistSkillParameterVisiblity || (exports.AtomistSkillParameterVisiblity = {}));
var AtomistSkillRequiredCapabilityScope;
(function (AtomistSkillRequiredCapabilityScope) {
    AtomistSkillRequiredCapabilityScope["Ingestion"] = "ingestion";
    AtomistSkillRequiredCapabilityScope["Configuration"] = "configuration";
})(AtomistSkillRequiredCapabilityScope = exports.AtomistSkillRequiredCapabilityScope || (exports.AtomistSkillRequiredCapabilityScope = {}));
var AtomistSkillRuntime;
(function (AtomistSkillRuntime) {
    AtomistSkillRuntime["Nodejs10"] = "nodejs10";
    AtomistSkillRuntime["Nodejs12"] = "nodejs12";
    AtomistSkillRuntime["Python37"] = "python37";
    AtomistSkillRuntime["Python38"] = "python38";
    AtomistSkillRuntime["Go113"] = "go113";
    AtomistSkillRuntime["Java11"] = "java11";
})(AtomistSkillRuntime = exports.AtomistSkillRuntime || (exports.AtomistSkillRuntime = {}));
var AtomistSkillStatusCode;
(function (AtomistSkillStatusCode) {
    AtomistSkillStatusCode["Registered"] = "registered";
    AtomistSkillStatusCode["Scheduled"] = "scheduled";
    AtomistSkillStatusCode["Deploying"] = "deploying";
    AtomistSkillStatusCode["Running"] = "running";
    AtomistSkillStatusCode["Error"] = "error";
    AtomistSkillStatusCode["Undeployed"] = "undeployed";
})(AtomistSkillStatusCode = exports.AtomistSkillStatusCode || (exports.AtomistSkillStatusCode = {}));
var AtomistSkillStringParameterLineStyle;
(function (AtomistSkillStringParameterLineStyle) {
    AtomistSkillStringParameterLineStyle["Single"] = "single";
    AtomistSkillStringParameterLineStyle["Multiple"] = "multiple";
})(AtomistSkillStringParameterLineStyle = exports.AtomistSkillStringParameterLineStyle || (exports.AtomistSkillStringParameterLineStyle = {}));
var AtomistSkillTechnology;
(function (AtomistSkillTechnology) {
    AtomistSkillTechnology["Java"] = "JAVA";
    AtomistSkillTechnology["Maven"] = "MAVEN";
    AtomistSkillTechnology["Docker"] = "DOCKER";
    AtomistSkillTechnology["Javascript"] = "JAVASCRIPT";
    AtomistSkillTechnology["Npm"] = "NPM";
    AtomistSkillTechnology["Lein"] = "LEIN";
    AtomistSkillTechnology["Clojure"] = "CLOJURE";
    AtomistSkillTechnology["Kubernetes"] = "KUBERNETES";
})(AtomistSkillTechnology = exports.AtomistSkillTechnology || (exports.AtomistSkillTechnology = {}));
var AtomistSkillUpgradePolicy;
(function (AtomistSkillUpgradePolicy) {
    AtomistSkillUpgradePolicy["Stable"] = "stable";
    AtomistSkillUpgradePolicy["Unstable"] = "unstable";
    AtomistSkillUpgradePolicy["Testing"] = "testing";
    AtomistSkillUpgradePolicy["Manual"] = "manual";
})(AtomistSkillUpgradePolicy = exports.AtomistSkillUpgradePolicy || (exports.AtomistSkillUpgradePolicy = {}));
var BinaryRepositoryType;
(function (BinaryRepositoryType) {
    BinaryRepositoryType["Maven2"] = "maven2";
    BinaryRepositoryType["Npm"] = "npm";
})(BinaryRepositoryType = exports.BinaryRepositoryType || (exports.BinaryRepositoryType = {}));
var BucketUnit;
(function (BucketUnit) {
    /** Group events by year. */
    BucketUnit["Year"] = "YEAR";
    /** Group events by month. */
    BucketUnit["Month"] = "MONTH";
    /** Group events by day. */
    BucketUnit["Day"] = "DAY";
    /** Group events by hour. */
    BucketUnit["Hour"] = "HOUR";
    /** Group events by minute. */
    BucketUnit["Minute"] = "MINUTE";
    /** Group events by second. */
    BucketUnit["Second"] = "SECOND";
})(BucketUnit = exports.BucketUnit || (exports.BucketUnit = {}));
/** Enum for BuildStatus */
var BuildStatus;
(function (BuildStatus) {
    BuildStatus["Passed"] = "passed";
    BuildStatus["Broken"] = "broken";
    BuildStatus["Failed"] = "failed";
    BuildStatus["Started"] = "started";
    BuildStatus["Canceled"] = "canceled";
    BuildStatus["Pending"] = "pending";
    BuildStatus["Error"] = "error";
    BuildStatus["Queued"] = "queued";
})(BuildStatus = exports.BuildStatus || (exports.BuildStatus = {}));
/** Enum for BuildTrigger */
var BuildTrigger;
(function (BuildTrigger) {
    /** Value for pull_request */
    BuildTrigger["PullRequest"] = "pull_request";
    /** Value for push */
    BuildTrigger["Push"] = "push";
    /** Value for tag */
    BuildTrigger["Tag"] = "tag";
    /** Value for cron */
    BuildTrigger["Cron"] = "cron";
})(BuildTrigger = exports.BuildTrigger || (exports.BuildTrigger = {}));
var ChatTeamState;
(function (ChatTeamState) {
    ChatTeamState["Initializing"] = "initializing";
    ChatTeamState["Initialized"] = "initialized";
})(ChatTeamState = exports.ChatTeamState || (exports.ChatTeamState = {}));
var CheckRunAction;
(function (CheckRunAction) {
    CheckRunAction["Created"] = "created";
    CheckRunAction["Completed"] = "completed";
    CheckRunAction["Rerequested"] = "rerequested";
    CheckRunAction["RequestedAction"] = "requested_action";
})(CheckRunAction = exports.CheckRunAction || (exports.CheckRunAction = {}));
var CheckRunConclusion;
(function (CheckRunConclusion) {
    CheckRunConclusion["Success"] = "success";
    CheckRunConclusion["Failure"] = "failure";
    CheckRunConclusion["Neutral"] = "neutral";
    CheckRunConclusion["Cancelled"] = "cancelled";
    CheckRunConclusion["Skipped"] = "skipped";
    CheckRunConclusion["TimedOut"] = "timed_out";
    CheckRunConclusion["ActionRequired"] = "action_required";
    CheckRunConclusion["Stale"] = "stale";
})(CheckRunConclusion = exports.CheckRunConclusion || (exports.CheckRunConclusion = {}));
var CheckRunStatus;
(function (CheckRunStatus) {
    CheckRunStatus["Queued"] = "queued";
    CheckRunStatus["InProgress"] = "in_progress";
    CheckRunStatus["Completed"] = "completed";
})(CheckRunStatus = exports.CheckRunStatus || (exports.CheckRunStatus = {}));
var CheckSuiteAction;
(function (CheckSuiteAction) {
    CheckSuiteAction["Completed"] = "completed";
    CheckSuiteAction["Requested"] = "requested";
    CheckSuiteAction["Rerequested"] = "rerequested";
})(CheckSuiteAction = exports.CheckSuiteAction || (exports.CheckSuiteAction = {}));
var CheckSuiteConclusion;
(function (CheckSuiteConclusion) {
    CheckSuiteConclusion["Success"] = "success";
    CheckSuiteConclusion["Failure"] = "failure";
    CheckSuiteConclusion["Neutral"] = "neutral";
    CheckSuiteConclusion["Cancelled"] = "cancelled";
    CheckSuiteConclusion["TimedOut"] = "timed_out";
    CheckSuiteConclusion["ActionRequired"] = "action_required";
    CheckSuiteConclusion["Stale"] = "stale";
})(CheckSuiteConclusion = exports.CheckSuiteConclusion || (exports.CheckSuiteConclusion = {}));
var CheckSuiteStatus;
(function (CheckSuiteStatus) {
    CheckSuiteStatus["Requested"] = "requested";
    CheckSuiteStatus["InProgress"] = "in_progress";
    CheckSuiteStatus["Completed"] = "completed";
    CheckSuiteStatus["Queued"] = "queued";
})(CheckSuiteStatus = exports.CheckSuiteStatus || (exports.CheckSuiteStatus = {}));
/** Enum for CommentCommentType */
var CommentCommentType;
(function (CommentCommentType) {
    /** Value for review */
    CommentCommentType["Review"] = "review";
    /** Value for pullRequest */
    CommentCommentType["PullRequest"] = "pullRequest";
    /** Value for issue */
    CommentCommentType["Issue"] = "issue";
})(CommentCommentType = exports.CommentCommentType || (exports.CommentCommentType = {}));
var CommitIssueRelationshipType;
(function (CommitIssueRelationshipType) {
    CommitIssueRelationshipType["References"] = "references";
    CommitIssueRelationshipType["Fixes"] = "fixes";
})(CommitIssueRelationshipType = exports.CommitIssueRelationshipType || (exports.CommitIssueRelationshipType = {}));
var CredentialType;
(function (CredentialType) {
    CredentialType["OAuthToken"] = "OAuthToken";
    CredentialType["Password"] = "Password";
})(CredentialType = exports.CredentialType || (exports.CredentialType = {}));
/** Deprecated */
var DockerRegistryType;
(function (DockerRegistryType) {
    DockerRegistryType["JFrog"] = "JFrog";
    DockerRegistryType["DockerHub"] = "DockerHub";
})(DockerRegistryType = exports.DockerRegistryType || (exports.DockerRegistryType = {}));
var EventType;
(function (EventType) {
    /** Chat events which have been received. */
    EventType["Chat"] = "CHAT";
    /** Custom events which have been received. */
    EventType["Custom"] = "CUSTOM";
    /** Events which have been received from an SCM source. */
    EventType["Scm"] = "SCM";
})(EventType = exports.EventType || (exports.EventType = {}));
var IssueState;
(function (IssueState) {
    IssueState["Open"] = "open";
    IssueState["Closed"] = "closed";
    IssueState["Deleted"] = "deleted";
})(IssueState = exports.IssueState || (exports.IssueState = {}));
/** Enum for JobStatus */
var JobStatus;
(function (JobStatus) {
    JobStatus["Created"] = "created";
    JobStatus["Pending"] = "pending";
    JobStatus["Running"] = "running";
    JobStatus["Failed"] = "failed";
    JobStatus["Success"] = "success";
    JobStatus["Canceled"] = "canceled";
    JobStatus["Skipped"] = "skipped";
    JobStatus["Manual"] = "manual";
})(JobStatus = exports.JobStatus || (exports.JobStatus = {}));
var LifecycleAttachmentType;
(function (LifecycleAttachmentType) {
    LifecycleAttachmentType["Push"] = "push";
})(LifecycleAttachmentType = exports.LifecycleAttachmentType || (exports.LifecycleAttachmentType = {}));
var ManageSubscriptionPolicyAction;
(function (ManageSubscriptionPolicyAction) {
    ManageSubscriptionPolicyAction["Ignore"] = "ignore";
    ManageSubscriptionPolicyAction["Unignore"] = "unignore";
    ManageSubscriptionPolicyAction["Subscribe"] = "subscribe";
    ManageSubscriptionPolicyAction["Unsubscribe"] = "unsubscribe";
})(ManageSubscriptionPolicyAction = exports.ManageSubscriptionPolicyAction || (exports.ManageSubscriptionPolicyAction = {}));
var ManageTargetPolicyAction;
(function (ManageTargetPolicyAction) {
    ManageTargetPolicyAction["Unset"] = "unset";
    ManageTargetPolicyAction["Set"] = "set";
})(ManageTargetPolicyAction = exports.ManageTargetPolicyAction || (exports.ManageTargetPolicyAction = {}));
/** Enum for MergeStatus */
var MergeStatus;
(function (MergeStatus) {
    /** Value for can_be_merged */
    MergeStatus["CanBeMerged"] = "can_be_merged";
    /** Value for unchecked */
    MergeStatus["Unchecked"] = "unchecked";
    /** Value for cannot_be_merged */
    MergeStatus["CannotBeMerged"] = "cannot_be_merged";
})(MergeStatus = exports.MergeStatus || (exports.MergeStatus = {}));
var OrgInitializationState;
(function (OrgInitializationState) {
    OrgInitializationState["Initializing"] = "initializing";
    OrgInitializationState["Initialized"] = "initialized";
})(OrgInitializationState = exports.OrgInitializationState || (exports.OrgInitializationState = {}));
var OwnerType;
(function (OwnerType) {
    OwnerType["User"] = "user";
    OwnerType["Organization"] = "organization";
})(OwnerType = exports.OwnerType || (exports.OwnerType = {}));
/** Enum for the PipelineProviders */
var PipelineProvider;
(function (PipelineProvider) {
    /** Gitlab CI Pipeline */
    PipelineProvider["GitlabCi"] = "gitlab_ci";
})(PipelineProvider = exports.PipelineProvider || (exports.PipelineProvider = {}));
/** Enum for PipelineStatus */
var PipelineStatus;
(function (PipelineStatus) {
    PipelineStatus["Running"] = "running";
    PipelineStatus["Pending"] = "pending";
    PipelineStatus["Success"] = "success";
    PipelineStatus["Failed"] = "failed";
    PipelineStatus["Canceled"] = "canceled";
    PipelineStatus["Skipped"] = "skipped";
    PipelineStatus["Manual"] = "manual";
})(PipelineStatus = exports.PipelineStatus || (exports.PipelineStatus = {}));
var PolicyCompliaceState;
(function (PolicyCompliaceState) {
    PolicyCompliaceState["Created"] = "created";
    PolicyCompliaceState["InReview"] = "in_review";
    PolicyCompliaceState["Reviewed"] = "reviewed";
})(PolicyCompliaceState = exports.PolicyCompliaceState || (exports.PolicyCompliaceState = {}));
/** Enum for ProviderType */
var ProviderType;
(function (ProviderType) {
    ProviderType["BitbucketCloud"] = "bitbucket_cloud";
    ProviderType["GithubCom"] = "github_com";
    ProviderType["Ghe"] = "ghe";
    ProviderType["Bitbucket"] = "bitbucket";
    ProviderType["Gitlab"] = "gitlab";
})(ProviderType = exports.ProviderType || (exports.ProviderType = {}));
var PullRequestAction;
(function (PullRequestAction) {
    PullRequestAction["Assigned"] = "assigned";
    PullRequestAction["Created"] = "created";
    PullRequestAction["Unassigned"] = "unassigned";
    PullRequestAction["ReviewRequested"] = "review_requested";
    PullRequestAction["ReviewRequestRemoved"] = "review_request_removed";
    PullRequestAction["Labeled"] = "labeled";
    PullRequestAction["Unlabeled"] = "unlabeled";
    PullRequestAction["Opened"] = "opened";
    PullRequestAction["Edited"] = "edited";
    PullRequestAction["Closed"] = "closed";
    PullRequestAction["Reopened"] = "reopened";
    PullRequestAction["Synchronize"] = "synchronize";
    PullRequestAction["Submitted"] = "submitted";
    PullRequestAction["ReadyForReview"] = "ready_for_review";
})(PullRequestAction = exports.PullRequestAction || (exports.PullRequestAction = {}));
var ReleaseAction;
(function (ReleaseAction) {
    ReleaseAction["Published"] = "published";
    ReleaseAction["Unpublished"] = "unpublished";
    ReleaseAction["Created"] = "created";
    ReleaseAction["Edited"] = "edited";
    ReleaseAction["Deleted"] = "deleted";
    ReleaseAction["Prereleased"] = "prereleased";
    ReleaseAction["Released"] = "released";
})(ReleaseAction = exports.ReleaseAction || (exports.ReleaseAction = {}));
var ResourceProviderStateName;
(function (ResourceProviderStateName) {
    ResourceProviderStateName["Converged"] = "converged";
    ResourceProviderStateName["Unconverged"] = "unconverged";
    ResourceProviderStateName["Misconfigured"] = "misconfigured";
    ResourceProviderStateName["Unauthorized"] = "unauthorized";
})(ResourceProviderStateName = exports.ResourceProviderStateName || (exports.ResourceProviderStateName = {}));
var ResourceUserType;
(function (ResourceUserType) {
    ResourceUserType["ScmId"] = "SCMId";
    ResourceUserType["GenericResourceUser"] = "GenericResourceUser";
    ResourceUserType["SystemAccount"] = "SystemAccount";
    ResourceUserType["GitHubAppResourceUser"] = "GitHubAppResourceUser";
})(ResourceUserType = exports.ResourceUserType || (exports.ResourceUserType = {}));
/** Enum for ReviewState */
var ReviewState;
(function (ReviewState) {
    /** Value for requested */
    ReviewState["Requested"] = "requested";
    /** Value for pending */
    ReviewState["Pending"] = "pending";
    /** Value for approved */
    ReviewState["Approved"] = "approved";
    /** Value for commented */
    ReviewState["Commented"] = "commented";
    /** Value for unapproved */
    ReviewState["Unapproved"] = "unapproved";
    /** Value for changes_requested */
    ReviewState["ChangesRequested"] = "changes_requested";
})(ReviewState = exports.ReviewState || (exports.ReviewState = {}));
var ScmProviderStateName;
(function (ScmProviderStateName) {
    ScmProviderStateName["Converged"] = "converged";
    ScmProviderStateName["Unconverged"] = "unconverged";
    ScmProviderStateName["Misconfigured"] = "misconfigured";
    ScmProviderStateName["Unauthorized"] = "unauthorized";
})(ScmProviderStateName = exports.ScmProviderStateName || (exports.ScmProviderStateName = {}));
var SdmDeployState;
(function (SdmDeployState) {
    SdmDeployState["Requested"] = "requested";
    SdmDeployState["Disabled"] = "disabled";
})(SdmDeployState = exports.SdmDeployState || (exports.SdmDeployState = {}));
var SdmGoalDisplayFormat;
(function (SdmGoalDisplayFormat) {
    SdmGoalDisplayFormat["Compact"] = "compact";
    SdmGoalDisplayFormat["Full"] = "full";
})(SdmGoalDisplayFormat = exports.SdmGoalDisplayFormat || (exports.SdmGoalDisplayFormat = {}));
var SdmGoalDisplayState;
(function (SdmGoalDisplayState) {
    SdmGoalDisplayState["ShowCurrent"] = "show_current";
    SdmGoalDisplayState["ShowAll"] = "show_all";
})(SdmGoalDisplayState = exports.SdmGoalDisplayState || (exports.SdmGoalDisplayState = {}));
var SdmGoalState;
(function (SdmGoalState) {
    SdmGoalState["Success"] = "success";
    SdmGoalState["PreApproved"] = "pre_approved";
    SdmGoalState["Requested"] = "requested";
    SdmGoalState["WaitingForPreApproval"] = "waiting_for_pre_approval";
    SdmGoalState["Approved"] = "approved";
    SdmGoalState["WaitingForApproval"] = "waiting_for_approval";
    SdmGoalState["Failure"] = "failure";
    SdmGoalState["Stopped"] = "stopped";
    SdmGoalState["Planned"] = "planned";
    SdmGoalState["InProcess"] = "in_process";
    SdmGoalState["Skipped"] = "skipped";
    SdmGoalState["Canceled"] = "canceled";
})(SdmGoalState = exports.SdmGoalState || (exports.SdmGoalState = {}));
/** Enum for StatusState */
var StatusState;
(function (StatusState) {
    /** Value for pending */
    StatusState["Pending"] = "pending";
    /** Value for success */
    StatusState["Success"] = "success";
    /** Value for error */
    StatusState["Error"] = "error";
    /** Value for failure */
    StatusState["Failure"] = "failure";
})(StatusState = exports.StatusState || (exports.StatusState = {}));
var TimeUnit;
(function (TimeUnit) {
    TimeUnit["Seconds"] = "seconds";
    TimeUnit["Minutes"] = "minutes";
    TimeUnit["Hours"] = "hours";
})(TimeUnit = exports.TimeUnit || (exports.TimeUnit = {}));
var WebhookAuthType;
(function (WebhookAuthType) {
    WebhookAuthType["HmacSha1"] = "hmac_sha1";
    WebhookAuthType["None"] = "none";
})(WebhookAuthType = exports.WebhookAuthType || (exports.WebhookAuthType = {}));
var WebhookState;
(function (WebhookState) {
    WebhookState["Enabled"] = "enabled";
    WebhookState["Disabled"] = "disabled";
})(WebhookState = exports.WebhookState || (exports.WebhookState = {}));
/** Ordering Enum for Application */
var _ApplicationOrdering;
(function (_ApplicationOrdering) {
    /** Ascending sort for atmTeamId */
    _ApplicationOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _ApplicationOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _ApplicationOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _ApplicationOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for state */
    _ApplicationOrdering["StateAsc"] = "state_asc";
    /** Descending sort for state */
    _ApplicationOrdering["StateDesc"] = "state_desc";
    /** Ascending sort for host */
    _ApplicationOrdering["HostAsc"] = "host_asc";
    /** Descending sort for host */
    _ApplicationOrdering["HostDesc"] = "host_desc";
    /** Ascending sort for timestamp */
    _ApplicationOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _ApplicationOrdering["TimestampDesc"] = "timestamp_desc";
    /** Ascending sort for domain */
    _ApplicationOrdering["DomainAsc"] = "domain_asc";
    /** Descending sort for domain */
    _ApplicationOrdering["DomainDesc"] = "domain_desc";
    /** Ascending sort for data */
    _ApplicationOrdering["DataAsc"] = "data_asc";
    /** Descending sort for data */
    _ApplicationOrdering["DataDesc"] = "data_desc";
})(_ApplicationOrdering = exports._ApplicationOrdering || (exports._ApplicationOrdering = {}));
var _AtomistLogOrdering;
(function (_AtomistLogOrdering) {
    _AtomistLogOrdering["Asc"] = "asc";
    _AtomistLogOrdering["Desc"] = "desc";
})(_AtomistLogOrdering = exports._AtomistLogOrdering || (exports._AtomistLogOrdering = {}));
/** Ordering Enum for Branch */
var _BranchOrdering;
(function (_BranchOrdering) {
    /** Ascending sort for atmTeamId */
    _BranchOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _BranchOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _BranchOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _BranchOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for name */
    _BranchOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _BranchOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for timestamp */
    _BranchOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _BranchOrdering["TimestampDesc"] = "timestamp_desc";
    /** Ascending sort for isRemote */
    _BranchOrdering["IsRemoteAsc"] = "isRemote_asc";
    /** Descending sort for isRemote */
    _BranchOrdering["IsRemoteDesc"] = "isRemote_desc";
    /** Ascending sort for remoteRepoHtmlUrl */
    _BranchOrdering["RemoteRepoHtmlUrlAsc"] = "remoteRepoHtmlUrl_asc";
    /** Descending sort for remoteRepoHtmlUrl */
    _BranchOrdering["RemoteRepoHtmlUrlDesc"] = "remoteRepoHtmlUrl_desc";
})(_BranchOrdering = exports._BranchOrdering || (exports._BranchOrdering = {}));
/** Ordering Enum for Build */
var _BuildOrdering;
(function (_BuildOrdering) {
    /** Ascending sort for atmTeamId */
    _BuildOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _BuildOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _BuildOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _BuildOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for buildId */
    _BuildOrdering["BuildIdAsc"] = "buildId_asc";
    /** Descending sort for buildId */
    _BuildOrdering["BuildIdDesc"] = "buildId_desc";
    /** Ascending sort for number */
    _BuildOrdering["NumberAsc"] = "number_asc";
    /** Descending sort for number */
    _BuildOrdering["NumberDesc"] = "number_desc";
    /** Ascending sort for name */
    _BuildOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _BuildOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for status */
    _BuildOrdering["StatusAsc"] = "status_asc";
    /** Descending sort for status */
    _BuildOrdering["StatusDesc"] = "status_desc";
    /** Ascending sort for buildUrl */
    _BuildOrdering["BuildUrlAsc"] = "buildUrl_asc";
    /** Descending sort for buildUrl */
    _BuildOrdering["BuildUrlDesc"] = "buildUrl_desc";
    /** Ascending sort for compareUrl */
    _BuildOrdering["CompareUrlAsc"] = "compareUrl_asc";
    /** Descending sort for compareUrl */
    _BuildOrdering["CompareUrlDesc"] = "compareUrl_desc";
    /** Ascending sort for trigger */
    _BuildOrdering["TriggerAsc"] = "trigger_asc";
    /** Descending sort for trigger */
    _BuildOrdering["TriggerDesc"] = "trigger_desc";
    /** Ascending sort for provider */
    _BuildOrdering["ProviderAsc"] = "provider_asc";
    /** Descending sort for provider */
    _BuildOrdering["ProviderDesc"] = "provider_desc";
    /** Ascending sort for pullRequestNumber */
    _BuildOrdering["PullRequestNumberAsc"] = "pullRequestNumber_asc";
    /** Descending sort for pullRequestNumber */
    _BuildOrdering["PullRequestNumberDesc"] = "pullRequestNumber_desc";
    /** Ascending sort for startedAt */
    _BuildOrdering["StartedAtAsc"] = "startedAt_asc";
    /** Descending sort for startedAt */
    _BuildOrdering["StartedAtDesc"] = "startedAt_desc";
    /** Ascending sort for finishedAt */
    _BuildOrdering["FinishedAtAsc"] = "finishedAt_asc";
    /** Descending sort for finishedAt */
    _BuildOrdering["FinishedAtDesc"] = "finishedAt_desc";
    /** Ascending sort for timestamp */
    _BuildOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _BuildOrdering["TimestampDesc"] = "timestamp_desc";
    /** Ascending sort for workflowId */
    _BuildOrdering["WorkflowIdAsc"] = "workflowId_asc";
    /** Descending sort for workflowId */
    _BuildOrdering["WorkflowIdDesc"] = "workflowId_desc";
    /** Ascending sort for jobName */
    _BuildOrdering["JobNameAsc"] = "jobName_asc";
    /** Descending sort for jobName */
    _BuildOrdering["JobNameDesc"] = "jobName_desc";
    /** Ascending sort for jobId */
    _BuildOrdering["JobIdAsc"] = "jobId_asc";
    /** Descending sort for jobId */
    _BuildOrdering["JobIdDesc"] = "jobId_desc";
    /** Ascending sort for data */
    _BuildOrdering["DataAsc"] = "data_asc";
    /** Descending sort for data */
    _BuildOrdering["DataDesc"] = "data_desc";
})(_BuildOrdering = exports._BuildOrdering || (exports._BuildOrdering = {}));
/** Ordering Enum for ChannelLink */
var _ChannelLinkOrdering;
(function (_ChannelLinkOrdering) {
    /** Ascending sort for atmTeamId */
    _ChannelLinkOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _ChannelLinkOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _ChannelLinkOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _ChannelLinkOrdering["IdDesc"] = "id_desc";
})(_ChannelLinkOrdering = exports._ChannelLinkOrdering || (exports._ChannelLinkOrdering = {}));
/** Ordering Enum for ChatChannel */
var _ChatChannelOrdering;
(function (_ChatChannelOrdering) {
    /** Ascending sort for atmTeamId */
    _ChatChannelOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _ChatChannelOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _ChatChannelOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _ChatChannelOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for name */
    _ChatChannelOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _ChatChannelOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for provider */
    _ChatChannelOrdering["ProviderAsc"] = "provider_asc";
    /** Descending sort for provider */
    _ChatChannelOrdering["ProviderDesc"] = "provider_desc";
    /** Ascending sort for normalizedName */
    _ChatChannelOrdering["NormalizedNameAsc"] = "normalizedName_asc";
    /** Descending sort for normalizedName */
    _ChatChannelOrdering["NormalizedNameDesc"] = "normalizedName_desc";
    /** Ascending sort for channelId */
    _ChatChannelOrdering["ChannelIdAsc"] = "channelId_asc";
    /** Descending sort for channelId */
    _ChatChannelOrdering["ChannelIdDesc"] = "channelId_desc";
    /** Ascending sort for isDefault */
    _ChatChannelOrdering["IsDefaultAsc"] = "isDefault_asc";
    /** Descending sort for isDefault */
    _ChatChannelOrdering["IsDefaultDesc"] = "isDefault_desc";
    /** Ascending sort for botInvitedSelf */
    _ChatChannelOrdering["BotInvitedSelfAsc"] = "botInvitedSelf_asc";
    /** Descending sort for botInvitedSelf */
    _ChatChannelOrdering["BotInvitedSelfDesc"] = "botInvitedSelf_desc";
    /** Ascending sort for archived */
    _ChatChannelOrdering["ArchivedAsc"] = "archived_asc";
    /** Descending sort for archived */
    _ChatChannelOrdering["ArchivedDesc"] = "archived_desc";
})(_ChatChannelOrdering = exports._ChatChannelOrdering || (exports._ChatChannelOrdering = {}));
/** Ordering Enum for ChatId */
var _ChatIdOrdering;
(function (_ChatIdOrdering) {
    /** Ascending sort for atmTeamId */
    _ChatIdOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _ChatIdOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _ChatIdOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _ChatIdOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for screenName */
    _ChatIdOrdering["ScreenNameAsc"] = "screenName_asc";
    /** Descending sort for screenName */
    _ChatIdOrdering["ScreenNameDesc"] = "screenName_desc";
    /** Ascending sort for userId */
    _ChatIdOrdering["UserIdAsc"] = "userId_asc";
    /** Descending sort for userId */
    _ChatIdOrdering["UserIdDesc"] = "userId_desc";
    /** Ascending sort for provider */
    _ChatIdOrdering["ProviderAsc"] = "provider_asc";
    /** Descending sort for provider */
    _ChatIdOrdering["ProviderDesc"] = "provider_desc";
    /** Ascending sort for isAtomistBot */
    _ChatIdOrdering["IsAtomistBotAsc"] = "isAtomistBot_asc";
    /** Descending sort for isAtomistBot */
    _ChatIdOrdering["IsAtomistBotDesc"] = "isAtomistBot_desc";
    /** Ascending sort for isOwner */
    _ChatIdOrdering["IsOwnerAsc"] = "isOwner_asc";
    /** Descending sort for isOwner */
    _ChatIdOrdering["IsOwnerDesc"] = "isOwner_desc";
    /** Ascending sort for isPrimaryOwner */
    _ChatIdOrdering["IsPrimaryOwnerAsc"] = "isPrimaryOwner_asc";
    /** Descending sort for isPrimaryOwner */
    _ChatIdOrdering["IsPrimaryOwnerDesc"] = "isPrimaryOwner_desc";
    /** Ascending sort for isAdmin */
    _ChatIdOrdering["IsAdminAsc"] = "isAdmin_asc";
    /** Descending sort for isAdmin */
    _ChatIdOrdering["IsAdminDesc"] = "isAdmin_desc";
    /** Ascending sort for isBot */
    _ChatIdOrdering["IsBotAsc"] = "isBot_asc";
    /** Descending sort for isBot */
    _ChatIdOrdering["IsBotDesc"] = "isBot_desc";
    /** Ascending sort for timezoneLabel */
    _ChatIdOrdering["TimezoneLabelAsc"] = "timezoneLabel_asc";
    /** Descending sort for timezoneLabel */
    _ChatIdOrdering["TimezoneLabelDesc"] = "timezoneLabel_desc";
})(_ChatIdOrdering = exports._ChatIdOrdering || (exports._ChatIdOrdering = {}));
/** Ordering Enum for ChatTeam */
var _ChatTeamOrdering;
(function (_ChatTeamOrdering) {
    /** Ascending sort for atmTeamId */
    _ChatTeamOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _ChatTeamOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _ChatTeamOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _ChatTeamOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for name */
    _ChatTeamOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _ChatTeamOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for provider */
    _ChatTeamOrdering["ProviderAsc"] = "provider_asc";
    /** Descending sort for provider */
    _ChatTeamOrdering["ProviderDesc"] = "provider_desc";
    /** Ascending sort for domain */
    _ChatTeamOrdering["DomainAsc"] = "domain_asc";
    /** Descending sort for domain */
    _ChatTeamOrdering["DomainDesc"] = "domain_desc";
    /** Ascending sort for messageCount */
    _ChatTeamOrdering["MessageCountAsc"] = "messageCount_asc";
    /** Descending sort for messageCount */
    _ChatTeamOrdering["MessageCountDesc"] = "messageCount_desc";
    /** Ascending sort for emailDomain */
    _ChatTeamOrdering["EmailDomainAsc"] = "emailDomain_asc";
    /** Descending sort for emailDomain */
    _ChatTeamOrdering["EmailDomainDesc"] = "emailDomain_desc";
})(_ChatTeamOrdering = exports._ChatTeamOrdering || (exports._ChatTeamOrdering = {}));
var _CheckRunOrdering;
(function (_CheckRunOrdering) {
    _CheckRunOrdering["StartedAtAsc"] = "startedAt_asc";
    _CheckRunOrdering["StartedAtDesc"] = "startedAt_desc";
    _CheckRunOrdering["CompletedAtAsc"] = "completedAt_asc";
    _CheckRunOrdering["CompletedAtDesc"] = "completedAt_desc";
})(_CheckRunOrdering = exports._CheckRunOrdering || (exports._CheckRunOrdering = {}));
var _CheckSuiteOrdering;
(function (_CheckSuiteOrdering) {
    _CheckSuiteOrdering["TimestampAsc"] = "timestamp_asc";
    _CheckSuiteOrdering["TimestampDesc"] = "timestamp_desc";
})(_CheckSuiteOrdering = exports._CheckSuiteOrdering || (exports._CheckSuiteOrdering = {}));
/** Ordering Enum for Comment */
var _CommentOrdering;
(function (_CommentOrdering) {
    /** Ascending sort for atmTeamId */
    _CommentOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _CommentOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _CommentOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _CommentOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for body */
    _CommentOrdering["BodyAsc"] = "body_asc";
    /** Descending sort for body */
    _CommentOrdering["BodyDesc"] = "body_desc";
    /** Ascending sort for timestamp */
    _CommentOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _CommentOrdering["TimestampDesc"] = "timestamp_desc";
    /** Ascending sort for createdAt */
    _CommentOrdering["CreatedAtAsc"] = "createdAt_asc";
    /** Descending sort for createdAt */
    _CommentOrdering["CreatedAtDesc"] = "createdAt_desc";
    /** Ascending sort for updatedAt */
    _CommentOrdering["UpdatedAtAsc"] = "updatedAt_asc";
    /** Descending sort for updatedAt */
    _CommentOrdering["UpdatedAtDesc"] = "updatedAt_desc";
    /** Ascending sort for commentId */
    _CommentOrdering["CommentIdAsc"] = "commentId_asc";
    /** Descending sort for commentId */
    _CommentOrdering["CommentIdDesc"] = "commentId_desc";
    /** Ascending sort for gitHubId */
    _CommentOrdering["GitHubIdAsc"] = "gitHubId_asc";
    /** Descending sort for gitHubId */
    _CommentOrdering["GitHubIdDesc"] = "gitHubId_desc";
    /** Ascending sort for path */
    _CommentOrdering["PathAsc"] = "path_asc";
    /** Descending sort for path */
    _CommentOrdering["PathDesc"] = "path_desc";
    /** Ascending sort for position */
    _CommentOrdering["PositionAsc"] = "position_asc";
    /** Descending sort for position */
    _CommentOrdering["PositionDesc"] = "position_desc";
    /** Ascending sort for htmlUrl */
    _CommentOrdering["HtmlUrlAsc"] = "htmlUrl_asc";
    /** Descending sort for htmlUrl */
    _CommentOrdering["HtmlUrlDesc"] = "htmlUrl_desc";
    /** Ascending sort for commentType */
    _CommentOrdering["CommentTypeAsc"] = "commentType_asc";
    /** Descending sort for commentType */
    _CommentOrdering["CommentTypeDesc"] = "commentType_desc";
})(_CommentOrdering = exports._CommentOrdering || (exports._CommentOrdering = {}));
/** Ordering Enum for Commit */
var _CommitOrdering;
(function (_CommitOrdering) {
    /** Ascending sort for atmTeamId */
    _CommitOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _CommitOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for sha */
    _CommitOrdering["ShaAsc"] = "sha_asc";
    /** Descending sort for sha */
    _CommitOrdering["ShaDesc"] = "sha_desc";
    /** Ascending sort for message */
    _CommitOrdering["MessageAsc"] = "message_asc";
    /** Descending sort for message */
    _CommitOrdering["MessageDesc"] = "message_desc";
    /** Ascending sort for timestamp */
    _CommitOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _CommitOrdering["TimestampDesc"] = "timestamp_desc";
})(_CommitOrdering = exports._CommitOrdering || (exports._CommitOrdering = {}));
/** Ordering Enum for DeletedBranch */
var _DeletedBranchOrdering;
(function (_DeletedBranchOrdering) {
    /** Ascending sort for atmTeamId */
    _DeletedBranchOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _DeletedBranchOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _DeletedBranchOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _DeletedBranchOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for name */
    _DeletedBranchOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _DeletedBranchOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for timestamp */
    _DeletedBranchOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _DeletedBranchOrdering["TimestampDesc"] = "timestamp_desc";
})(_DeletedBranchOrdering = exports._DeletedBranchOrdering || (exports._DeletedBranchOrdering = {}));
/** Ordering Enum for DockerImage */
var _DockerImageOrdering;
(function (_DockerImageOrdering) {
    /** Ascending sort for atmTeamId */
    _DockerImageOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _DockerImageOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for image */
    _DockerImageOrdering["ImageAsc"] = "image_asc";
    /** Descending sort for image */
    _DockerImageOrdering["ImageDesc"] = "image_desc";
    /** Ascending sort for imageName */
    _DockerImageOrdering["ImageNameAsc"] = "imageName_asc";
    /** Descending sort for imageName */
    _DockerImageOrdering["ImageNameDesc"] = "imageName_desc";
    /** Ascending sort for timestamp */
    _DockerImageOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _DockerImageOrdering["TimestampDesc"] = "timestamp_desc";
})(_DockerImageOrdering = exports._DockerImageOrdering || (exports._DockerImageOrdering = {}));
/** Ordering Enum for Email */
var _EmailOrdering;
(function (_EmailOrdering) {
    /** Ascending sort for atmTeamId */
    _EmailOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _EmailOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for address */
    _EmailOrdering["AddressAsc"] = "address_asc";
    /** Descending sort for address */
    _EmailOrdering["AddressDesc"] = "address_desc";
})(_EmailOrdering = exports._EmailOrdering || (exports._EmailOrdering = {}));
var _GitHubAppInstallationOrdering;
(function (_GitHubAppInstallationOrdering) {
    /** Ascending sort for owner */
    _GitHubAppInstallationOrdering["OwnerAsc"] = "owner_asc";
    /** Descending sort for owner */
    _GitHubAppInstallationOrdering["OwnerDesc"] = "owner_desc";
    /** Ascending sort for ownerType */
    _GitHubAppInstallationOrdering["OwnerTypeAsc"] = "ownerType_asc";
    /** Descending sort for ownerType */
    _GitHubAppInstallationOrdering["OwnerTypeDesc"] = "ownerType_desc";
})(_GitHubAppInstallationOrdering = exports._GitHubAppInstallationOrdering || (exports._GitHubAppInstallationOrdering = {}));
/** Ordering Enum for SCMId */
var _GitHubAppResourceUserOrdering;
(function (_GitHubAppResourceUserOrdering) {
    /** Ascending sort for login */
    _GitHubAppResourceUserOrdering["LoginAsc"] = "login_asc";
    /** Descending sort for login */
    _GitHubAppResourceUserOrdering["LoginDesc"] = "login_desc";
})(_GitHubAppResourceUserOrdering = exports._GitHubAppResourceUserOrdering || (exports._GitHubAppResourceUserOrdering = {}));
/** Ordering Enum for GitHubId */
var _GitHubIdOrdering;
(function (_GitHubIdOrdering) {
    /** Ascending sort for atmTeamId */
    _GitHubIdOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _GitHubIdOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for login */
    _GitHubIdOrdering["LoginAsc"] = "login_asc";
    /** Descending sort for login */
    _GitHubIdOrdering["LoginDesc"] = "login_desc";
    /** Ascending sort for name */
    _GitHubIdOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _GitHubIdOrdering["NameDesc"] = "name_desc";
})(_GitHubIdOrdering = exports._GitHubIdOrdering || (exports._GitHubIdOrdering = {}));
/** Ordering Enum for GitHubProvider */
var _GitHubProviderOrdering;
(function (_GitHubProviderOrdering) {
    /** Ascending sort for atmTeamId */
    _GitHubProviderOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _GitHubProviderOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _GitHubProviderOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _GitHubProviderOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for url */
    _GitHubProviderOrdering["UrlAsc"] = "url_asc";
    /** Descending sort for url */
    _GitHubProviderOrdering["UrlDesc"] = "url_desc";
    /** Ascending sort for providerId */
    _GitHubProviderOrdering["ProviderIdAsc"] = "providerId_asc";
    /** Descending sort for providerId */
    _GitHubProviderOrdering["ProviderIdDesc"] = "providerId_desc";
    /** Ascending sort for apiUrl */
    _GitHubProviderOrdering["ApiUrlAsc"] = "apiUrl_asc";
    /** Descending sort for apiUrl */
    _GitHubProviderOrdering["ApiUrlDesc"] = "apiUrl_desc";
    /** Ascending sort for gitUrl */
    _GitHubProviderOrdering["GitUrlAsc"] = "gitUrl_asc";
    /** Descending sort for gitUrl */
    _GitHubProviderOrdering["GitUrlDesc"] = "gitUrl_desc";
    /** Ascending sort for providerType */
    _GitHubProviderOrdering["ProviderTypeAsc"] = "providerType_asc";
    /** Descending sort for providerType */
    _GitHubProviderOrdering["ProviderTypeDesc"] = "providerType_desc";
})(_GitHubProviderOrdering = exports._GitHubProviderOrdering || (exports._GitHubProviderOrdering = {}));
/** Ordering Enum for HerokuApp */
var _HerokuAppOrdering;
(function (_HerokuAppOrdering) {
    /** Ascending sort for atmTeamId */
    _HerokuAppOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _HerokuAppOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for app */
    _HerokuAppOrdering["AppAsc"] = "app_asc";
    /** Descending sort for app */
    _HerokuAppOrdering["AppDesc"] = "app_desc";
    /** Ascending sort for url */
    _HerokuAppOrdering["UrlAsc"] = "url_asc";
    /** Descending sort for url */
    _HerokuAppOrdering["UrlDesc"] = "url_desc";
    /** Ascending sort for timestamp */
    _HerokuAppOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _HerokuAppOrdering["TimestampDesc"] = "timestamp_desc";
    /** Ascending sort for user */
    _HerokuAppOrdering["UserAsc"] = "user_asc";
    /** Descending sort for user */
    _HerokuAppOrdering["UserDesc"] = "user_desc";
    /** Ascending sort for appId */
    _HerokuAppOrdering["AppIdAsc"] = "appId_asc";
    /** Descending sort for appId */
    _HerokuAppOrdering["AppIdDesc"] = "appId_desc";
    /** Ascending sort for release */
    _HerokuAppOrdering["ReleaseAsc"] = "release_asc";
    /** Descending sort for release */
    _HerokuAppOrdering["ReleaseDesc"] = "release_desc";
})(_HerokuAppOrdering = exports._HerokuAppOrdering || (exports._HerokuAppOrdering = {}));
/** Ordering Enum for ImageLinked */
var _ImageLinkedOrdering;
(function (_ImageLinkedOrdering) {
    /** Ascending sort for atmTeamId */
    _ImageLinkedOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _ImageLinkedOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for timestamp */
    _ImageLinkedOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _ImageLinkedOrdering["TimestampDesc"] = "timestamp_desc";
})(_ImageLinkedOrdering = exports._ImageLinkedOrdering || (exports._ImageLinkedOrdering = {}));
/** Ordering Enum for Issue */
var _IssueOrdering;
(function (_IssueOrdering) {
    /** Ascending sort for atmTeamId */
    _IssueOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _IssueOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _IssueOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _IssueOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for number */
    _IssueOrdering["NumberAsc"] = "number_asc";
    /** Descending sort for number */
    _IssueOrdering["NumberDesc"] = "number_desc";
    /** Ascending sort for name */
    _IssueOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _IssueOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for title */
    _IssueOrdering["TitleAsc"] = "title_asc";
    /** Descending sort for title */
    _IssueOrdering["TitleDesc"] = "title_desc";
    /** Ascending sort for body */
    _IssueOrdering["BodyAsc"] = "body_asc";
    /** Descending sort for body */
    _IssueOrdering["BodyDesc"] = "body_desc";
    /** Ascending sort for state */
    _IssueOrdering["StateAsc"] = "state_asc";
    /** Descending sort for state */
    _IssueOrdering["StateDesc"] = "state_desc";
    /** Ascending sort for timestamp */
    _IssueOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _IssueOrdering["TimestampDesc"] = "timestamp_desc";
    /** Ascending sort for action */
    _IssueOrdering["ActionAsc"] = "action_asc";
    /** Descending sort for action */
    _IssueOrdering["ActionDesc"] = "action_desc";
    /** Ascending sort for createdAt */
    _IssueOrdering["CreatedAtAsc"] = "createdAt_asc";
    /** Descending sort for createdAt */
    _IssueOrdering["CreatedAtDesc"] = "createdAt_desc";
    /** Ascending sort for updatedAt */
    _IssueOrdering["UpdatedAtAsc"] = "updatedAt_asc";
    /** Descending sort for updatedAt */
    _IssueOrdering["UpdatedAtDesc"] = "updatedAt_desc";
    /** Ascending sort for closedAt */
    _IssueOrdering["ClosedAtAsc"] = "closedAt_asc";
    /** Descending sort for closedAt */
    _IssueOrdering["ClosedAtDesc"] = "closedAt_desc";
})(_IssueOrdering = exports._IssueOrdering || (exports._IssueOrdering = {}));
/** Ordering Enum for K8Container */
var _K8ContainerOrdering;
(function (_K8ContainerOrdering) {
    /** Ascending sort for atmTeamId */
    _K8ContainerOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _K8ContainerOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for name */
    _K8ContainerOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _K8ContainerOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for imageName */
    _K8ContainerOrdering["ImageNameAsc"] = "imageName_asc";
    /** Descending sort for imageName */
    _K8ContainerOrdering["ImageNameDesc"] = "imageName_desc";
    /** Ascending sort for timestamp */
    _K8ContainerOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _K8ContainerOrdering["TimestampDesc"] = "timestamp_desc";
    /** Ascending sort for environment */
    _K8ContainerOrdering["EnvironmentAsc"] = "environment_asc";
    /** Descending sort for environment */
    _K8ContainerOrdering["EnvironmentDesc"] = "environment_desc";
    /** Ascending sort for containerJSON */
    _K8ContainerOrdering["ContainerJsonAsc"] = "containerJSON_asc";
    /** Descending sort for containerJSON */
    _K8ContainerOrdering["ContainerJsonDesc"] = "containerJSON_desc";
    /** Ascending sort for state */
    _K8ContainerOrdering["StateAsc"] = "state_asc";
    /** Descending sort for state */
    _K8ContainerOrdering["StateDesc"] = "state_desc";
    /** Ascending sort for stateReason */
    _K8ContainerOrdering["StateReasonAsc"] = "stateReason_asc";
    /** Descending sort for stateReason */
    _K8ContainerOrdering["StateReasonDesc"] = "stateReason_desc";
    /** Ascending sort for ready */
    _K8ContainerOrdering["ReadyAsc"] = "ready_asc";
    /** Descending sort for ready */
    _K8ContainerOrdering["ReadyDesc"] = "ready_desc";
    /** Ascending sort for restartCount */
    _K8ContainerOrdering["RestartCountAsc"] = "restartCount_asc";
    /** Descending sort for restartCount */
    _K8ContainerOrdering["RestartCountDesc"] = "restartCount_desc";
    /** Ascending sort for statusJSON */
    _K8ContainerOrdering["StatusJsonAsc"] = "statusJSON_asc";
    /** Descending sort for statusJSON */
    _K8ContainerOrdering["StatusJsonDesc"] = "statusJSON_desc";
    /** Ascending sort for resourceVersion */
    _K8ContainerOrdering["ResourceVersionAsc"] = "resourceVersion_asc";
    /** Descending sort for resourceVersion */
    _K8ContainerOrdering["ResourceVersionDesc"] = "resourceVersion_desc";
    /** Ascending sort for containerID */
    _K8ContainerOrdering["ContainerIdAsc"] = "containerID_asc";
    /** Descending sort for containerID */
    _K8ContainerOrdering["ContainerIdDesc"] = "containerID_desc";
})(_K8ContainerOrdering = exports._K8ContainerOrdering || (exports._K8ContainerOrdering = {}));
/** Ordering Enum for K8Pod */
var _K8PodOrdering;
(function (_K8PodOrdering) {
    /** Ascending sort for atmTeamId */
    _K8PodOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _K8PodOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for name */
    _K8PodOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _K8PodOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for phase */
    _K8PodOrdering["PhaseAsc"] = "phase_asc";
    /** Descending sort for phase */
    _K8PodOrdering["PhaseDesc"] = "phase_desc";
    /** Ascending sort for environment */
    _K8PodOrdering["EnvironmentAsc"] = "environment_asc";
    /** Descending sort for environment */
    _K8PodOrdering["EnvironmentDesc"] = "environment_desc";
    /** Ascending sort for timestamp */
    _K8PodOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _K8PodOrdering["TimestampDesc"] = "timestamp_desc";
    /** Ascending sort for baseName */
    _K8PodOrdering["BaseNameAsc"] = "baseName_asc";
    /** Descending sort for baseName */
    _K8PodOrdering["BaseNameDesc"] = "baseName_desc";
    /** Ascending sort for namespace */
    _K8PodOrdering["NamespaceAsc"] = "namespace_asc";
    /** Descending sort for namespace */
    _K8PodOrdering["NamespaceDesc"] = "namespace_desc";
    /** Ascending sort for statusJSON */
    _K8PodOrdering["StatusJsonAsc"] = "statusJSON_asc";
    /** Descending sort for statusJSON */
    _K8PodOrdering["StatusJsonDesc"] = "statusJSON_desc";
    /** Ascending sort for host */
    _K8PodOrdering["HostAsc"] = "host_asc";
    /** Descending sort for host */
    _K8PodOrdering["HostDesc"] = "host_desc";
    /** Ascending sort for state */
    _K8PodOrdering["StateAsc"] = "state_asc";
    /** Descending sort for state */
    _K8PodOrdering["StateDesc"] = "state_desc";
    /** Ascending sort for specsJSON */
    _K8PodOrdering["SpecsJsonAsc"] = "specsJSON_asc";
    /** Descending sort for specsJSON */
    _K8PodOrdering["SpecsJsonDesc"] = "specsJSON_desc";
    /** Ascending sort for envJSON */
    _K8PodOrdering["EnvJsonAsc"] = "envJSON_asc";
    /** Descending sort for envJSON */
    _K8PodOrdering["EnvJsonDesc"] = "envJSON_desc";
    /** Ascending sort for metadataJSON */
    _K8PodOrdering["MetadataJsonAsc"] = "metadataJSON_asc";
    /** Descending sort for metadataJSON */
    _K8PodOrdering["MetadataJsonDesc"] = "metadataJSON_desc";
    /** Ascending sort for containersCrashLoopBackOff */
    _K8PodOrdering["ContainersCrashLoopBackOffAsc"] = "containersCrashLoopBackOff_asc";
    /** Descending sort for containersCrashLoopBackOff */
    _K8PodOrdering["ContainersCrashLoopBackOffDesc"] = "containersCrashLoopBackOff_desc";
    /** Ascending sort for resourceVersion */
    _K8PodOrdering["ResourceVersionAsc"] = "resourceVersion_asc";
    /** Descending sort for resourceVersion */
    _K8PodOrdering["ResourceVersionDesc"] = "resourceVersion_desc";
})(_K8PodOrdering = exports._K8PodOrdering || (exports._K8PodOrdering = {}));
/** Ordering Enum for Label */
var _LabelOrdering;
(function (_LabelOrdering) {
    /** Ascending sort for atmTeamId */
    _LabelOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _LabelOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _LabelOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _LabelOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for name */
    _LabelOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _LabelOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for default */
    _LabelOrdering["DefaultAsc"] = "default_asc";
    /** Descending sort for default */
    _LabelOrdering["DefaultDesc"] = "default_desc";
    /** Ascending sort for color */
    _LabelOrdering["ColorAsc"] = "color_asc";
    /** Descending sort for color */
    _LabelOrdering["ColorDesc"] = "color_desc";
})(_LabelOrdering = exports._LabelOrdering || (exports._LabelOrdering = {}));
/** asc or desc ordering. Must be used with orderBy */
var _Ordering;
(function (_Ordering) {
    /** Descending order */
    _Ordering["Desc"] = "desc";
    /** Ascending order */
    _Ordering["Asc"] = "asc";
})(_Ordering = exports._Ordering || (exports._Ordering = {}));
/** Ordering Enum for Org */
var _OrgOrdering;
(function (_OrgOrdering) {
    /** Ascending sort for atmTeamId */
    _OrgOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _OrgOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _OrgOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _OrgOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for owner */
    _OrgOrdering["OwnerAsc"] = "owner_asc";
    /** Descending sort for owner */
    _OrgOrdering["OwnerDesc"] = "owner_desc";
    /** Ascending sort for ownerType */
    _OrgOrdering["OwnerTypeAsc"] = "ownerType_asc";
    /** Descending sort for ownerType */
    _OrgOrdering["OwnerTypeDesc"] = "ownerType_desc";
})(_OrgOrdering = exports._OrgOrdering || (exports._OrgOrdering = {}));
/** Ordering Enum for Person */
var _PersonOrdering;
(function (_PersonOrdering) {
    /** Ascending sort for atmTeamId */
    _PersonOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _PersonOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _PersonOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _PersonOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for forename */
    _PersonOrdering["ForenameAsc"] = "forename_asc";
    /** Descending sort for forename */
    _PersonOrdering["ForenameDesc"] = "forename_desc";
    /** Ascending sort for surname */
    _PersonOrdering["SurnameAsc"] = "surname_asc";
    /** Descending sort for surname */
    _PersonOrdering["SurnameDesc"] = "surname_desc";
    /** Ascending sort for name */
    _PersonOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _PersonOrdering["NameDesc"] = "name_desc";
})(_PersonOrdering = exports._PersonOrdering || (exports._PersonOrdering = {}));
/** Ordering Enum for PullRequestImpact */
var _PullRequestImpactOrdering;
(function (_PullRequestImpactOrdering) {
    /** Ascending sort for atmTeamId */
    _PullRequestImpactOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _PullRequestImpactOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _PullRequestImpactOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _PullRequestImpactOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for url */
    _PullRequestImpactOrdering["UrlAsc"] = "url_asc";
    /** Descending sort for url */
    _PullRequestImpactOrdering["UrlDesc"] = "url_desc";
    /** Ascending sort for data */
    _PullRequestImpactOrdering["DataAsc"] = "data_asc";
    /** Descending sort for data */
    _PullRequestImpactOrdering["DataDesc"] = "data_desc";
})(_PullRequestImpactOrdering = exports._PullRequestImpactOrdering || (exports._PullRequestImpactOrdering = {}));
/** Ordering Enum for PullRequest */
var _PullRequestOrdering;
(function (_PullRequestOrdering) {
    /** Ascending sort for atmTeamId */
    _PullRequestOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _PullRequestOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _PullRequestOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _PullRequestOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for number */
    _PullRequestOrdering["NumberAsc"] = "number_asc";
    /** Descending sort for number */
    _PullRequestOrdering["NumberDesc"] = "number_desc";
    /** Ascending sort for prId */
    _PullRequestOrdering["PrIdAsc"] = "prId_asc";
    /** Descending sort for prId */
    _PullRequestOrdering["PrIdDesc"] = "prId_desc";
    /** Ascending sort for name */
    _PullRequestOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _PullRequestOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for body */
    _PullRequestOrdering["BodyAsc"] = "body_asc";
    /** Descending sort for body */
    _PullRequestOrdering["BodyDesc"] = "body_desc";
    /** Ascending sort for state */
    _PullRequestOrdering["StateAsc"] = "state_asc";
    /** Descending sort for state */
    _PullRequestOrdering["StateDesc"] = "state_desc";
    /** Ascending sort for merged */
    _PullRequestOrdering["MergedAsc"] = "merged_asc";
    /** Descending sort for merged */
    _PullRequestOrdering["MergedDesc"] = "merged_desc";
    /** Ascending sort for timestamp */
    _PullRequestOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _PullRequestOrdering["TimestampDesc"] = "timestamp_desc";
    /** Ascending sort for baseBranchName */
    _PullRequestOrdering["BaseBranchNameAsc"] = "baseBranchName_asc";
    /** Descending sort for baseBranchName */
    _PullRequestOrdering["BaseBranchNameDesc"] = "baseBranchName_desc";
    /** Ascending sort for branchName */
    _PullRequestOrdering["BranchNameAsc"] = "branchName_asc";
    /** Descending sort for branchName */
    _PullRequestOrdering["BranchNameDesc"] = "branchName_desc";
    /** Ascending sort for title */
    _PullRequestOrdering["TitleAsc"] = "title_asc";
    /** Descending sort for title */
    _PullRequestOrdering["TitleDesc"] = "title_desc";
    /** Ascending sort for createdAt */
    _PullRequestOrdering["CreatedAtAsc"] = "createdAt_asc";
    /** Descending sort for createdAt */
    _PullRequestOrdering["CreatedAtDesc"] = "createdAt_desc";
    /** Ascending sort for updatedAt */
    _PullRequestOrdering["UpdatedAtAsc"] = "updatedAt_asc";
    /** Descending sort for updatedAt */
    _PullRequestOrdering["UpdatedAtDesc"] = "updatedAt_desc";
    /** Ascending sort for closedAt */
    _PullRequestOrdering["ClosedAtAsc"] = "closedAt_asc";
    /** Descending sort for closedAt */
    _PullRequestOrdering["ClosedAtDesc"] = "closedAt_desc";
    /** Ascending sort for mergedAt */
    _PullRequestOrdering["MergedAtAsc"] = "mergedAt_asc";
    /** Descending sort for mergedAt */
    _PullRequestOrdering["MergedAtDesc"] = "mergedAt_desc";
    /** Ascending sort for mergeStatus */
    _PullRequestOrdering["MergeStatusAsc"] = "mergeStatus_asc";
    /** Descending sort for mergeStatus */
    _PullRequestOrdering["MergeStatusDesc"] = "mergeStatus_desc";
})(_PullRequestOrdering = exports._PullRequestOrdering || (exports._PullRequestOrdering = {}));
/** Ordering Enum for PushImpact */
var _PushImpactOrdering;
(function (_PushImpactOrdering) {
    /** Ascending sort for atmTeamId */
    _PushImpactOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _PushImpactOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _PushImpactOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _PushImpactOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for url */
    _PushImpactOrdering["UrlAsc"] = "url_asc";
    /** Descending sort for url */
    _PushImpactOrdering["UrlDesc"] = "url_desc";
    /** Ascending sort for data */
    _PushImpactOrdering["DataAsc"] = "data_asc";
    /** Descending sort for data */
    _PushImpactOrdering["DataDesc"] = "data_desc";
})(_PushImpactOrdering = exports._PushImpactOrdering || (exports._PushImpactOrdering = {}));
/** Ordering Enum for Push */
var _PushOrdering;
(function (_PushOrdering) {
    /** Ascending sort for atmTeamId */
    _PushOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _PushOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _PushOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _PushOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for timestamp */
    _PushOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _PushOrdering["TimestampDesc"] = "timestamp_desc";
    /** Ascending sort for branch */
    _PushOrdering["BranchAsc"] = "branch_asc";
    /** Descending sort for branch */
    _PushOrdering["BranchDesc"] = "branch_desc";
})(_PushOrdering = exports._PushOrdering || (exports._PushOrdering = {}));
/** Ordering Enum for Release */
var _ReleaseOrdering;
(function (_ReleaseOrdering) {
    /** Ascending sort for atmTeamId */
    _ReleaseOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _ReleaseOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _ReleaseOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _ReleaseOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for name */
    _ReleaseOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _ReleaseOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for timestamp */
    _ReleaseOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _ReleaseOrdering["TimestampDesc"] = "timestamp_desc";
})(_ReleaseOrdering = exports._ReleaseOrdering || (exports._ReleaseOrdering = {}));
/** Ordering Enum for Repo */
var _RepoOrdering;
(function (_RepoOrdering) {
    /** Ascending sort for atmTeamId */
    _RepoOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _RepoOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _RepoOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _RepoOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for owner */
    _RepoOrdering["OwnerAsc"] = "owner_asc";
    /** Descending sort for owner */
    _RepoOrdering["OwnerDesc"] = "owner_desc";
    /** Ascending sort for name */
    _RepoOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _RepoOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for allowRebaseMerge */
    _RepoOrdering["AllowRebaseMergeAsc"] = "allowRebaseMerge_asc";
    /** Descending sort for allowRebaseMerge */
    _RepoOrdering["AllowRebaseMergeDesc"] = "allowRebaseMerge_desc";
    /** Ascending sort for allowSquashMerge */
    _RepoOrdering["AllowSquashMergeAsc"] = "allowSquashMerge_asc";
    /** Descending sort for allowSquashMerge */
    _RepoOrdering["AllowSquashMergeDesc"] = "allowSquashMerge_desc";
    /** Ascending sort for allowMergeCommit */
    _RepoOrdering["AllowMergeCommitAsc"] = "allowMergeCommit_asc";
    /** Descending sort for allowMergeCommit */
    _RepoOrdering["AllowMergeCommitDesc"] = "allowMergeCommit_desc";
    /** Ascending sort for repoId */
    _RepoOrdering["RepoIdAsc"] = "repoId_asc";
    /** Descending sort for repoId */
    _RepoOrdering["RepoIdDesc"] = "repoId_desc";
    /** Ascending sort for gitHubId */
    _RepoOrdering["GitHubIdAsc"] = "gitHubId_asc";
    /** Descending sort for gitHubId */
    _RepoOrdering["GitHubIdDesc"] = "gitHubId_desc";
    /** Ascending sort for defaultBranch */
    _RepoOrdering["DefaultBranchAsc"] = "defaultBranch_asc";
    /** Descending sort for defaultBranch */
    _RepoOrdering["DefaultBranchDesc"] = "defaultBranch_desc";
})(_RepoOrdering = exports._RepoOrdering || (exports._RepoOrdering = {}));
/** Ordering Enum for ResourceProvider */
var _ResourceProviderOrdering;
(function (_ResourceProviderOrdering) {
    /** Ascending sort for atmTeamId */
    _ResourceProviderOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _ResourceProviderOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _ResourceProviderOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _ResourceProviderOrdering["IdDesc"] = "id_desc";
})(_ResourceProviderOrdering = exports._ResourceProviderOrdering || (exports._ResourceProviderOrdering = {}));
/** Ordering Enum for Review */
var _ReviewOrdering;
(function (_ReviewOrdering) {
    /** Ascending sort for atmTeamId */
    _ReviewOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _ReviewOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _ReviewOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _ReviewOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for gitHubId */
    _ReviewOrdering["GitHubIdAsc"] = "gitHubId_asc";
    /** Descending sort for gitHubId */
    _ReviewOrdering["GitHubIdDesc"] = "gitHubId_desc";
    /** Ascending sort for reviewId */
    _ReviewOrdering["ReviewIdAsc"] = "reviewId_asc";
    /** Descending sort for reviewId */
    _ReviewOrdering["ReviewIdDesc"] = "reviewId_desc";
    /** Ascending sort for body */
    _ReviewOrdering["BodyAsc"] = "body_asc";
    /** Descending sort for body */
    _ReviewOrdering["BodyDesc"] = "body_desc";
    /** Ascending sort for state */
    _ReviewOrdering["StateAsc"] = "state_asc";
    /** Descending sort for state */
    _ReviewOrdering["StateDesc"] = "state_desc";
    /** Ascending sort for submittedAt */
    _ReviewOrdering["SubmittedAtAsc"] = "submittedAt_asc";
    /** Descending sort for submittedAt */
    _ReviewOrdering["SubmittedAtDesc"] = "submittedAt_desc";
    /** Ascending sort for htmlUrl */
    _ReviewOrdering["HtmlUrlAsc"] = "htmlUrl_asc";
    /** Descending sort for htmlUrl */
    _ReviewOrdering["HtmlUrlDesc"] = "htmlUrl_desc";
})(_ReviewOrdering = exports._ReviewOrdering || (exports._ReviewOrdering = {}));
/** Ordering Enum for SCMId */
var _ScmIdOrdering;
(function (_ScmIdOrdering) {
    /** Ascending sort for atmTeamId */
    _ScmIdOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _ScmIdOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for login */
    _ScmIdOrdering["LoginAsc"] = "login_asc";
    /** Descending sort for login */
    _ScmIdOrdering["LoginDesc"] = "login_desc";
    /** Ascending sort for name */
    _ScmIdOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _ScmIdOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for avatar */
    _ScmIdOrdering["AvatarAsc"] = "avatar_asc";
    /** Descending sort for avatar */
    _ScmIdOrdering["AvatarDesc"] = "avatar_desc";
})(_ScmIdOrdering = exports._ScmIdOrdering || (exports._ScmIdOrdering = {}));
/** Ordering Enum for SCMProvider */
var _ScmProviderOrdering;
(function (_ScmProviderOrdering) {
    /** Ascending sort for atmTeamId */
    _ScmProviderOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _ScmProviderOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _ScmProviderOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _ScmProviderOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for url */
    _ScmProviderOrdering["UrlAsc"] = "url_asc";
    /** Descending sort for url */
    _ScmProviderOrdering["UrlDesc"] = "url_desc";
    /** Ascending sort for providerId */
    _ScmProviderOrdering["ProviderIdAsc"] = "providerId_asc";
    /** Descending sort for providerId */
    _ScmProviderOrdering["ProviderIdDesc"] = "providerId_desc";
    /** Ascending sort for apiUrl */
    _ScmProviderOrdering["ApiUrlAsc"] = "apiUrl_asc";
    /** Descending sort for apiUrl */
    _ScmProviderOrdering["ApiUrlDesc"] = "apiUrl_desc";
    /** Ascending sort for gitUrl */
    _ScmProviderOrdering["GitUrlAsc"] = "gitUrl_asc";
    /** Descending sort for gitUrl */
    _ScmProviderOrdering["GitUrlDesc"] = "gitUrl_desc";
    /** Ascending sort for providerType */
    _ScmProviderOrdering["ProviderTypeAsc"] = "providerType_asc";
    /** Descending sort for providerType */
    _ScmProviderOrdering["ProviderTypeDesc"] = "providerType_desc";
})(_ScmProviderOrdering = exports._ScmProviderOrdering || (exports._ScmProviderOrdering = {}));
/** Ordering Enum for Status */
var _StatusOrdering;
(function (_StatusOrdering) {
    /** Ascending sort for atmTeamId */
    _StatusOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _StatusOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _StatusOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _StatusOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for state */
    _StatusOrdering["StateAsc"] = "state_asc";
    /** Descending sort for state */
    _StatusOrdering["StateDesc"] = "state_desc";
    /** Ascending sort for description */
    _StatusOrdering["DescriptionAsc"] = "description_asc";
    /** Descending sort for description */
    _StatusOrdering["DescriptionDesc"] = "description_desc";
    /** Ascending sort for targetUrl */
    _StatusOrdering["TargetUrlAsc"] = "targetUrl_asc";
    /** Descending sort for targetUrl */
    _StatusOrdering["TargetUrlDesc"] = "targetUrl_desc";
    /** Ascending sort for context */
    _StatusOrdering["ContextAsc"] = "context_asc";
    /** Descending sort for context */
    _StatusOrdering["ContextDesc"] = "context_desc";
    /** Ascending sort for timestamp */
    _StatusOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _StatusOrdering["TimestampDesc"] = "timestamp_desc";
})(_StatusOrdering = exports._StatusOrdering || (exports._StatusOrdering = {}));
/** Ordering Enum for Tag */
var _TagOrdering;
(function (_TagOrdering) {
    /** Ascending sort for atmTeamId */
    _TagOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _TagOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _TagOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _TagOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for name */
    _TagOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _TagOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for description */
    _TagOrdering["DescriptionAsc"] = "description_asc";
    /** Descending sort for description */
    _TagOrdering["DescriptionDesc"] = "description_desc";
    /** Ascending sort for ref */
    _TagOrdering["RefAsc"] = "ref_asc";
    /** Descending sort for ref */
    _TagOrdering["RefDesc"] = "ref_desc";
    /** Ascending sort for timestamp */
    _TagOrdering["TimestampAsc"] = "timestamp_asc";
    /** Descending sort for timestamp */
    _TagOrdering["TimestampDesc"] = "timestamp_desc";
})(_TagOrdering = exports._TagOrdering || (exports._TagOrdering = {}));
/** Ordering Enum for Team */
var _TeamOrdering;
(function (_TeamOrdering) {
    /** Ascending sort for atmTeamId */
    _TeamOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _TeamOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _TeamOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _TeamOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for name */
    _TeamOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _TeamOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for description */
    _TeamOrdering["DescriptionAsc"] = "description_asc";
    /** Descending sort for description */
    _TeamOrdering["DescriptionDesc"] = "description_desc";
    /** Ascending sort for iconUrl */
    _TeamOrdering["IconUrlAsc"] = "iconUrl_asc";
    /** Descending sort for iconUrl */
    _TeamOrdering["IconUrlDesc"] = "iconUrl_desc";
    /** Ascending sort for createdAt */
    _TeamOrdering["CreatedAtAsc"] = "createdAt_asc";
    /** Descending sort for createdAt */
    _TeamOrdering["CreatedAtDesc"] = "createdAt_desc";
})(_TeamOrdering = exports._TeamOrdering || (exports._TeamOrdering = {}));
/** Ordering Enum for UserJoinedChannel */
var _UserJoinedChannelOrdering;
(function (_UserJoinedChannelOrdering) {
    /** Ascending sort for atmTeamId */
    _UserJoinedChannelOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _UserJoinedChannelOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _UserJoinedChannelOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _UserJoinedChannelOrdering["IdDesc"] = "id_desc";
})(_UserJoinedChannelOrdering = exports._UserJoinedChannelOrdering || (exports._UserJoinedChannelOrdering = {}));
/** Ordering Enum for Workflow */
var _WorkflowOrdering;
(function (_WorkflowOrdering) {
    /** Ascending sort for atmTeamId */
    _WorkflowOrdering["AtmTeamIdAsc"] = "atmTeamId_asc";
    /** Descending sort for atmTeamId */
    _WorkflowOrdering["AtmTeamIdDesc"] = "atmTeamId_desc";
    /** Ascending sort for id */
    _WorkflowOrdering["IdAsc"] = "id_asc";
    /** Descending sort for id */
    _WorkflowOrdering["IdDesc"] = "id_desc";
    /** Ascending sort for name */
    _WorkflowOrdering["NameAsc"] = "name_asc";
    /** Descending sort for name */
    _WorkflowOrdering["NameDesc"] = "name_desc";
    /** Ascending sort for workflowId */
    _WorkflowOrdering["WorkflowIdAsc"] = "workflowId_asc";
    /** Descending sort for workflowId */
    _WorkflowOrdering["WorkflowIdDesc"] = "workflowId_desc";
    /** Ascending sort for provider */
    _WorkflowOrdering["ProviderAsc"] = "provider_asc";
    /** Descending sort for provider */
    _WorkflowOrdering["ProviderDesc"] = "provider_desc";
    /** Ascending sort for config */
    _WorkflowOrdering["ConfigAsc"] = "config_asc";
    /** Descending sort for config */
    _WorkflowOrdering["ConfigDesc"] = "config_desc";
})(_WorkflowOrdering = exports._WorkflowOrdering || (exports._WorkflowOrdering = {}));
//# sourceMappingURL=types.js.map