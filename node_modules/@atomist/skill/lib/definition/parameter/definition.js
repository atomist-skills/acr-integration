"use strict";
/*
 * Copyright Â© 2021 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.pushStrategy = exports.refFilter = exports.repoFilter = void 0;
const skill_1 = require("../skill");
function repoFilter(options = { required: true }) {
    return {
        type: skill_1.ParameterType.RepoFilter,
        displayName: "Which repositories",
        description: "",
        required: options.required !== undefined ? options.required : true,
    };
}
exports.repoFilter = repoFilter;
function refFilter(options = { required: false }) {
    return {
        type: skill_1.ParameterType.StringArray,
        displayName: "Branch and tag filter",
        description: options.description
            ? options.description
            : "Restrict skill execution to certain branches or tags (use regular expressions)",
        required: options.required !== undefined ? options.required : false,
    };
}
exports.refFilter = refFilter;
function pushStrategy(options) {
    return {
        type: skill_1.ParameterType.SingleChoice,
        displayName: options.displayName,
        description: options.description,
        defaultValue: options.defaultValue
            ? options.defaultValue
            : "pr_default_commit",
        options: [
            {
                text: "Raise pull request for default branch; commit to other branches",
                value: "pr_default_commit",
            },
            {
                text: "Raise pull request for default branch only",
                value: "pr_default",
            },
            {
                text: "Raise pull request for any branch",
                value: "pr",
            },
            {
                text: "Commit to default branch only",
                value: "commit_default",
            },
            {
                text: "Commit to any branch",
                value: "commit",
            },
            ...(options.options || []),
        ],
        required: options.required !== undefined ? options.required : false,
    };
}
exports.pushStrategy = pushStrategy;
//# sourceMappingURL=definition.js.map