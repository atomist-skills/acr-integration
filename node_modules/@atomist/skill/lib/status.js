"use strict";
/*
 * Copyright Â© 2021 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.failure = exports.success = void 0;
class BuildableHandlerStatus {
    constructor(code, reason, visibility, _abort) {
        this.code = code;
        this.reason = reason;
        this.visibility = visibility;
        this._abort = _abort;
    }
    hidden() {
        this.visibility = "hidden";
        return this;
    }
    abort() {
        this._abort = true;
        return this;
    }
}
/**
 * Create a successful HandlerStatus with optionally provided
 * reason text
 *
 * The return object exposes a hidden function that can be used to
 * set the status to visibility: hidden or abort the step processing early.
 */
function success(reason) {
    return new BuildableHandlerStatus(0, reason);
}
exports.success = success;
/**
 * Create a failed HandlerStatus with optionally provided
 * reason text
 *
 * The return object exposes a hidden function that can be used to
 * set the status to visibility: hidden or abort the step processing early.
 */
function failure(reason) {
    return new BuildableHandlerStatus(1, reason);
}
exports.failure = failure;
//# sourceMappingURL=status.js.map