"use strict";
/*
 * Copyright Â© 2021 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.workspaceId = exports.isSubscriptionIncoming = exports.isWebhookIncoming = exports.isEventIncoming = exports.isCommandIncoming = void 0;
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
function isCommandIncoming(event) {
    return !!event.command;
}
exports.isCommandIncoming = isCommandIncoming;
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
function isEventIncoming(event) {
    return !!event.data;
}
exports.isEventIncoming = isEventIncoming;
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
function isWebhookIncoming(event) {
    return !!event.webhook;
}
exports.isWebhookIncoming = isWebhookIncoming;
function isSubscriptionIncoming(
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
event) {
    return !!event.subscription && !event.data;
}
exports.isSubscriptionIncoming = isSubscriptionIncoming;
function workspaceId(event) {
    if (isCommandIncoming(event)) {
        return event.team.id;
    }
    else if (isEventIncoming(event)) {
        return event.extensions.team_id;
    }
    else if (isWebhookIncoming(event) || isSubscriptionIncoming(event)) {
        return event.team_id;
    }
    return undefined;
}
exports.workspaceId = workspaceId;
//# sourceMappingURL=payload.js.map