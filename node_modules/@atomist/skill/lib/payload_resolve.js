"use strict";
/*
 * Copyright Â© 2021 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolvePayload = void 0;
const resolver_1 = require("./storage/resolver");
/**
 * Resolve an incoming payload to the actual incoming message by
 * following 'message_uri' pointers
 */
async function resolvePayload(pubSubEvent) {
    const payload = JSON.parse(Buffer.from(pubSubEvent.data, "base64").toString());
    if (payload.message_uri) {
        const resolver = DefaultResolvers.find(r => r.supports(payload.message_uri));
        if (resolver) {
            return resolvePayload(await resolver.resolve(payload.message_uri));
        }
        else {
            throw new Error(`Unsupported message_uri provided`);
        }
    }
    else {
        return payload;
    }
}
exports.resolvePayload = resolvePayload;
const DefaultResolvers = [resolver_1.GoogleCloudStoragePayloadResolver];
//# sourceMappingURL=payload_resolve.js.map