import { Attachment, SlackMessage } from "@atomist/slack-messages";
import { Contextual } from "../handler/handler";
export declare function successMessage(title: string, text: string, ctx: Contextual<any, any>, options?: Partial<Attachment>): SlackMessage;
export declare function questionMessage(title: string, text: string, ctx: Contextual<any, any>, options?: Partial<Attachment>): SlackMessage;
export declare function infoMessage(title: string, text: string, ctx: Contextual<any, any>, options?: Partial<Attachment>): SlackMessage;
export declare function warningMessage(title: string, text: string, ctx: Contextual<any, any>, options?: Partial<Attachment>): SlackMessage;
export declare function errorMessage(title: string, text: string, ctx: Contextual<any, any>, options?: Partial<Attachment>): SlackMessage;
export declare function progressMessage(title: string, text: string, progress: {
    state: "canceled" | "stopped" | "in_process" | "requested" | "planned" | "failure" | "waiting_for_approval" | "approved" | "waiting_for_pre_approval" | "pre_approved" | "success";
    color?: string;
    counter?: boolean;
    status?: boolean;
    image?: boolean;
    total: number;
    count: number;
}, ctx: Contextual<any, any>, options?: Partial<Attachment>): SlackMessage;
export declare function supportLink(ctx: Contextual<any, any>): string;
export declare function footer(ctx: Contextual<any, any>): string;
export declare function ts(): number;
export declare function separator(): string;
//# sourceMappingURL=messages.d.ts.map