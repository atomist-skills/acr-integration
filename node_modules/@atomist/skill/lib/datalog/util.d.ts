export declare type EntityType = string | string[] | number | number[] | boolean | boolean[] | Date | Date[] | {
    set: string[];
} | {
    add: string[];
};
export declare type Entity = {
    "schema/entity-type": string;
    "schema/entity": string;
} & Record<string, EntityType>;
/**
 * Helper to create a Datalog entity of given type and attributes
 */
export declare function entity<E extends Record<string, EntityType> = Record<string, EntityType>>(type: string, nameOrAttributes: string | E, attributes?: E): Entity;
/**
 * Helper to extract entity references from a list of provided entities
 * optionally filtered by schema/entity-type
 */
export declare function entityRefs(entities: Entity[], type?: string): string[];
/**
 * Helper to extract an entity reference from a list of provided entities
 * optionally filtered by schema/entity-type
 */
export declare function entityRef(entities: Entity | Entity[], type?: string): string;
//# sourceMappingURL=util.d.ts.map