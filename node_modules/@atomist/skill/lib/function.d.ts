import "source-map-support/register";
import { ContextFactory } from "./context";
import { CommandHandler, EventHandler, WebhookHandler } from "./handler/handler";
import { CommandIncoming, EventIncoming, SubscriptionIncoming, WebhookIncoming } from "./payload";
export interface PubSubMessage {
    data: string;
    attributes: any;
}
export declare const entryPoint: (pubSubEvent: PubSubMessage, context: {
    eventId: string;
}) => Promise<void>;
export declare function processEvent(event: EventIncoming | SubscriptionIncoming, ctx: {
    eventId: string;
}, loader?: (name: string) => Promise<EventHandler>, factory?: ContextFactory): Promise<void>;
export declare function processCommand(event: CommandIncoming, ctx: {
    eventId: string;
}, loader?: (name: string) => Promise<CommandHandler>, factory?: ContextFactory): Promise<void>;
export declare function processWebhook(event: WebhookIncoming, ctx: {
    eventId: string;
}, loader?: (name: string) => Promise<WebhookHandler>, factory?: ContextFactory): Promise<void>;
//# sourceMappingURL=function.d.ts.map